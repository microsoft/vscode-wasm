{
  "worlds": [
    {
      "name": "imports",
      "imports": {
        "interface-0": {
          "interface": 0
        },
        "interface-1": {
          "interface": 1
        },
        "interface-2": {
          "interface": 2
        }
      },
      "exports": {},
      "package": 0
    },
    {
      "name": "imports",
      "imports": {
        "interface-1": {
          "interface": 1
        },
        "interface-3": {
          "interface": 3
        },
        "interface-4": {
          "interface": 4
        }
      },
      "exports": {},
      "package": 1
    },
    {
      "name": "imports",
      "imports": {
        "interface-0": {
          "interface": 0
        },
        "interface-1": {
          "interface": 1
        },
        "interface-2": {
          "interface": 2
        },
        "interface-4": {
          "interface": 4
        },
        "interface-5": {
          "interface": 5
        },
        "interface-6": {
          "interface": 6
        }
      },
      "exports": {},
      "package": 2
    },
    {
      "name": "imports",
      "imports": {
        "interface-7": {
          "interface": 7
        },
        "interface-8": {
          "interface": 8
        },
        "interface-1": {
          "interface": 1
        },
        "interface-12": {
          "interface": 12
        },
        "interface-13": {
          "interface": 13
        },
        "interface-0": {
          "interface": 0
        },
        "interface-2": {
          "interface": 2
        },
        "interface-3": {
          "interface": 3
        },
        "interface-10": {
          "interface": 10
        },
        "interface-11": {
          "interface": 11
        },
        "interface-9": {
          "interface": 9
        }
      },
      "exports": {},
      "package": 3
    },
    {
      "name": "imports",
      "imports": {
        "interface-16": {
          "interface": 16
        },
        "interface-15": {
          "interface": 15
        },
        "interface-14": {
          "interface": 14
        }
      },
      "exports": {},
      "package": 4
    },
    {
      "name": "reactor",
      "imports": {
        "interface-4": {
          "interface": 4
        },
        "interface-1": {
          "interface": 1
        },
        "interface-3": {
          "interface": 3
        },
        "interface-0": {
          "interface": 0
        },
        "interface-2": {
          "interface": 2
        },
        "interface-5": {
          "interface": 5
        },
        "interface-6": {
          "interface": 6
        },
        "interface-7": {
          "interface": 7
        },
        "interface-8": {
          "interface": 8
        },
        "interface-9": {
          "interface": 9
        },
        "interface-10": {
          "interface": 10
        },
        "interface-11": {
          "interface": 11
        },
        "interface-12": {
          "interface": 12
        },
        "interface-13": {
          "interface": 13
        },
        "interface-16": {
          "interface": 16
        },
        "interface-15": {
          "interface": 15
        },
        "interface-14": {
          "interface": 14
        },
        "interface-17": {
          "interface": 17
        },
        "interface-18": {
          "interface": 18
        },
        "interface-20": {
          "interface": 20
        },
        "interface-21": {
          "interface": 21
        },
        "interface-22": {
          "interface": 22
        },
        "interface-23": {
          "interface": 23
        },
        "interface-24": {
          "interface": 24
        },
        "interface-25": {
          "interface": 25
        },
        "interface-26": {
          "interface": 26
        },
        "interface-27": {
          "interface": 27
        }
      },
      "exports": {},
      "package": 5
    },
    {
      "name": "command",
      "imports": {
        "interface-4": {
          "interface": 4
        },
        "interface-1": {
          "interface": 1
        },
        "interface-3": {
          "interface": 3
        },
        "interface-0": {
          "interface": 0
        },
        "interface-2": {
          "interface": 2
        },
        "interface-5": {
          "interface": 5
        },
        "interface-6": {
          "interface": 6
        },
        "interface-7": {
          "interface": 7
        },
        "interface-8": {
          "interface": 8
        },
        "interface-9": {
          "interface": 9
        },
        "interface-10": {
          "interface": 10
        },
        "interface-11": {
          "interface": 11
        },
        "interface-12": {
          "interface": 12
        },
        "interface-13": {
          "interface": 13
        },
        "interface-16": {
          "interface": 16
        },
        "interface-15": {
          "interface": 15
        },
        "interface-14": {
          "interface": 14
        },
        "interface-17": {
          "interface": 17
        },
        "interface-18": {
          "interface": 18
        },
        "interface-20": {
          "interface": 20
        },
        "interface-21": {
          "interface": 21
        },
        "interface-22": {
          "interface": 22
        },
        "interface-23": {
          "interface": 23
        },
        "interface-24": {
          "interface": 24
        },
        "interface-25": {
          "interface": 25
        },
        "interface-26": {
          "interface": 26
        },
        "interface-27": {
          "interface": 27
        }
      },
      "exports": {
        "interface-19": {
          "interface": 19
        }
      },
      "package": 5
    },
    {
      "name": "proxy",
      "imports": {
        "interface-4": {
          "interface": 4
        },
        "interface-1": {
          "interface": 1
        },
        "interface-3": {
          "interface": 3
        },
        "interface-16": {
          "interface": 16
        },
        "interface-0": {
          "interface": 0
        },
        "interface-2": {
          "interface": 2
        },
        "interface-21": {
          "interface": 21
        },
        "interface-22": {
          "interface": 22
        },
        "interface-20": {
          "interface": 20
        },
        "interface-28": {
          "interface": 28
        },
        "interface-30": {
          "interface": 30
        }
      },
      "exports": {
        "interface-29": {
          "interface": 29
        }
      },
      "package": 6,
      "docs": {
        "contents": "The `wasi:http/proxy` world captures a widely-implementable intersection of\nhosts that includes HTTP forward and reverse proxies. Components targeting\nthis world may concurrently stream in and out any number of incoming and\noutgoing HTTP requests."
      }
    },
    {
      "name": "command-extended",
      "imports": {
        "interface-1": {
          "interface": 1
        },
        "interface-3": {
          "interface": 3
        },
        "interface-0": {
          "interface": 0
        },
        "interface-2": {
          "interface": 2
        },
        "interface-28": {
          "interface": 28
        },
        "interface-30": {
          "interface": 30
        },
        "interface-4": {
          "interface": 4
        },
        "interface-5": {
          "interface": 5
        },
        "interface-6": {
          "interface": 6
        },
        "interface-7": {
          "interface": 7
        },
        "interface-8": {
          "interface": 8
        },
        "interface-9": {
          "interface": 9
        },
        "interface-10": {
          "interface": 10
        },
        "interface-11": {
          "interface": 11
        },
        "interface-12": {
          "interface": 12
        },
        "interface-13": {
          "interface": 13
        },
        "interface-16": {
          "interface": 16
        },
        "interface-15": {
          "interface": 15
        },
        "interface-14": {
          "interface": 14
        },
        "interface-17": {
          "interface": 17
        },
        "interface-18": {
          "interface": 18
        },
        "interface-20": {
          "interface": 20
        },
        "interface-21": {
          "interface": 21
        },
        "interface-22": {
          "interface": 22
        },
        "interface-23": {
          "interface": 23
        },
        "interface-24": {
          "interface": 24
        },
        "interface-25": {
          "interface": 25
        },
        "interface-26": {
          "interface": 26
        },
        "interface-27": {
          "interface": 27
        }
      },
      "exports": {
        "interface-19": {
          "interface": 19
        }
      },
      "package": 7
    },
    {
      "name": "test-reactor",
      "imports": {
        "interface-0": {
          "interface": 0
        },
        "interface-1": {
          "interface": 1
        },
        "interface-2": {
          "interface": 2
        },
        "interface-4": {
          "interface": 4
        },
        "interface-5": {
          "interface": 5
        },
        "interface-3": {
          "interface": 3
        },
        "interface-6": {
          "interface": 6
        },
        "interface-7": {
          "interface": 7
        },
        "interface-8": {
          "interface": 8
        },
        "interface-9": {
          "interface": 9
        },
        "interface-10": {
          "interface": 10
        },
        "interface-11": {
          "interface": 11
        },
        "interface-12": {
          "interface": 12
        },
        "interface-13": {
          "interface": 13
        },
        "interface-16": {
          "interface": 16
        },
        "interface-15": {
          "interface": 15
        },
        "interface-14": {
          "interface": 14
        },
        "interface-17": {
          "interface": 17
        },
        "interface-18": {
          "interface": 18
        },
        "interface-20": {
          "interface": 20
        },
        "interface-21": {
          "interface": 21
        },
        "interface-22": {
          "interface": 22
        },
        "interface-23": {
          "interface": 23
        },
        "interface-24": {
          "interface": 24
        },
        "interface-25": {
          "interface": 25
        },
        "interface-26": {
          "interface": 26
        },
        "interface-27": {
          "interface": 27
        },
        "output-stream": {
          "type": 278
        },
        "descriptor-stat": {
          "type": 279
        }
      },
      "exports": {
        "add-strings": {
          "function": {
            "name": "add-strings",
            "kind": "freestanding",
            "params": [
              {
                "name": "s",
                "type": 280
              }
            ],
            "results": [
              {
                "type": "u32"
              }
            ]
          }
        },
        "get-strings": {
          "function": {
            "name": "get-strings",
            "kind": "freestanding",
            "params": [],
            "results": [
              {
                "type": 280
              }
            ]
          }
        },
        "write-strings-to": {
          "function": {
            "name": "write-strings-to",
            "kind": "freestanding",
            "params": [
              {
                "name": "o",
                "type": 282
              }
            ],
            "results": [
              {
                "type": 281
              }
            ]
          }
        },
        "pass-an-imported-record": {
          "function": {
            "name": "pass-an-imported-record",
            "kind": "freestanding",
            "params": [
              {
                "name": "d",
                "type": 279
              }
            ],
            "results": [
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "package": 7
    },
    {
      "name": "test-command",
      "imports": {
        "interface-1": {
          "interface": 1
        },
        "interface-3": {
          "interface": 3
        },
        "interface-0": {
          "interface": 0
        },
        "interface-2": {
          "interface": 2
        },
        "interface-28": {
          "interface": 28
        },
        "interface-30": {
          "interface": 30
        },
        "interface-4": {
          "interface": 4
        },
        "interface-5": {
          "interface": 5
        },
        "interface-6": {
          "interface": 6
        },
        "interface-7": {
          "interface": 7
        },
        "interface-8": {
          "interface": 8
        },
        "interface-9": {
          "interface": 9
        },
        "interface-10": {
          "interface": 10
        },
        "interface-11": {
          "interface": 11
        },
        "interface-12": {
          "interface": 12
        },
        "interface-13": {
          "interface": 13
        },
        "interface-16": {
          "interface": 16
        },
        "interface-15": {
          "interface": 15
        },
        "interface-14": {
          "interface": 14
        },
        "interface-17": {
          "interface": 17
        },
        "interface-18": {
          "interface": 18
        },
        "interface-20": {
          "interface": 20
        },
        "interface-21": {
          "interface": 21
        },
        "interface-22": {
          "interface": 22
        },
        "interface-23": {
          "interface": 23
        },
        "interface-24": {
          "interface": 24
        },
        "interface-25": {
          "interface": 25
        },
        "interface-26": {
          "interface": 26
        },
        "interface-27": {
          "interface": 27
        }
      },
      "exports": {},
      "package": 7
    }
  ],
  "interfaces": [
    {
      "name": "error",
      "types": {
        "error": 0
      },
      "functions": {
        "[method]error.to-debug-string": {
          "name": "[method]error.to-debug-string",
          "kind": {
            "method": 0
          },
          "params": [
            {
              "name": "self",
              "type": 1
            }
          ],
          "results": [
            {
              "type": "string"
            }
          ],
          "docs": {
            "contents": "Returns a string that is suitable to assist humans in debugging\nthis error.\n\nWARNING: The returned string should not be consumed mechanically!\nIt may change across platforms, hosts, or other implementation\ndetails. Parsing this string is a major platform-compatibility\nhazard."
          }
        }
      },
      "package": 0
    },
    {
      "name": "poll",
      "types": {
        "pollable": 2
      },
      "functions": {
        "[method]pollable.ready": {
          "name": "[method]pollable.ready",
          "kind": {
            "method": 2
          },
          "params": [
            {
              "name": "self",
              "type": 3
            }
          ],
          "results": [
            {
              "type": "bool"
            }
          ],
          "docs": {
            "contents": "Return the readiness of a pollable. This function never blocks.\n\nReturns `true` when the pollable is ready, and `false` otherwise."
          }
        },
        "[method]pollable.block": {
          "name": "[method]pollable.block",
          "kind": {
            "method": 2
          },
          "params": [
            {
              "name": "self",
              "type": 3
            }
          ],
          "results": [],
          "docs": {
            "contents": "`block` returns immediately if the pollable is ready, and otherwise\nblocks until ready.\n\nThis function is equivalent to calling `poll.poll` on a list\ncontaining only this pollable."
          }
        },
        "poll": {
          "name": "poll",
          "kind": "freestanding",
          "params": [
            {
              "name": "in",
              "type": 4
            }
          ],
          "results": [
            {
              "type": 5
            }
          ],
          "docs": {
            "contents": "Poll for completion on a set of pollables.\n\nThis function takes a list of pollables, which identify I/O sources of\ninterest, and waits until one or more of the events is ready for I/O.\n\nThe result `list<u32>` contains one or more indices of handles in the\nargument list that is ready for I/O.\n\nIf the list contains more elements than can be indexed with a `u32`\nvalue, this function traps.\n\nA timeout can be implemented by adding a pollable from the\nwasi-clocks API to the list.\n\nThis function does not return a `result`; polling in itself does not\ndo any I/O so it doesn't fail. If any of the I/O sources identified by\nthe pollables has an error, it is indicated by marking the source as\nbeing reaedy for I/O."
          }
        }
      },
      "docs": {
        "contents": "A poll API intended to let users wait for I/O events on multiple handles\nat once."
      },
      "package": 0
    },
    {
      "name": "streams",
      "types": {
        "error": 6,
        "pollable": 7,
        "stream-error": 9,
        "input-stream": 10,
        "output-stream": 11
      },
      "functions": {
        "[method]input-stream.read": {
          "name": "[method]input-stream.read",
          "kind": {
            "method": 10
          },
          "params": [
            {
              "name": "self",
              "type": 12
            },
            {
              "name": "len",
              "type": "u64"
            }
          ],
          "results": [
            {
              "type": 14
            }
          ],
          "docs": {
            "contents": "Perform a non-blocking read from the stream.\n\nThis function returns a list of bytes containing the read data,\nwhen successful. The returned list will contain up to `len` bytes;\nit may return fewer than requested, but not more. The list is\nempty when no bytes are available for reading at this time. The\npollable given by `subscribe` will be ready when more bytes are\navailable.\n\nThis function fails with a `stream-error` when the operation\nencounters an error, giving `last-operation-failed`, or when the\nstream is closed, giving `closed`.\n\nWhen the caller gives a `len` of 0, it represents a request to\nread 0 bytes. If the stream is still open, this call should\nsucceed and return an empty list, or otherwise fail with `closed`.\n\nThe `len` parameter is a `u64`, which could represent a list of u8 which\nis not possible to allocate in wasm32, or not desirable to allocate as\nas a return value by the callee. The callee may return a list of bytes\nless than `len` in size while more bytes are available for reading."
          }
        },
        "[method]input-stream.blocking-read": {
          "name": "[method]input-stream.blocking-read",
          "kind": {
            "method": 10
          },
          "params": [
            {
              "name": "self",
              "type": 12
            },
            {
              "name": "len",
              "type": "u64"
            }
          ],
          "results": [
            {
              "type": 14
            }
          ],
          "docs": {
            "contents": "Read bytes from a stream, after blocking until at least one byte can\nbe read. Except for blocking, behavior is identical to `read`."
          }
        },
        "[method]input-stream.skip": {
          "name": "[method]input-stream.skip",
          "kind": {
            "method": 10
          },
          "params": [
            {
              "name": "self",
              "type": 12
            },
            {
              "name": "len",
              "type": "u64"
            }
          ],
          "results": [
            {
              "type": 15
            }
          ],
          "docs": {
            "contents": "Skip bytes from a stream. Returns number of bytes skipped.\n\nBehaves identical to `read`, except instead of returning a list\nof bytes, returns the number of bytes consumed from the stream."
          }
        },
        "[method]input-stream.blocking-skip": {
          "name": "[method]input-stream.blocking-skip",
          "kind": {
            "method": 10
          },
          "params": [
            {
              "name": "self",
              "type": 12
            },
            {
              "name": "len",
              "type": "u64"
            }
          ],
          "results": [
            {
              "type": 15
            }
          ],
          "docs": {
            "contents": "Skip bytes from a stream, after blocking until at least one byte\ncan be skipped. Except for blocking behavior, identical to `skip`."
          }
        },
        "[method]input-stream.subscribe": {
          "name": "[method]input-stream.subscribe",
          "kind": {
            "method": 10
          },
          "params": [
            {
              "name": "self",
              "type": 12
            }
          ],
          "results": [
            {
              "type": 18
            }
          ],
          "docs": {
            "contents": "Create a `pollable` which will resolve once either the specified stream\nhas bytes available to read or the other end of the stream has been\nclosed.\nThe created `pollable` is a child resource of the `input-stream`.\nImplementations may trap if the `input-stream` is dropped before\nall derived `pollable`s created with this function are dropped."
          }
        },
        "[method]output-stream.check-write": {
          "name": "[method]output-stream.check-write",
          "kind": {
            "method": 11
          },
          "params": [
            {
              "name": "self",
              "type": 16
            }
          ],
          "results": [
            {
              "type": 15
            }
          ],
          "docs": {
            "contents": "Check readiness for writing. This function never blocks.\n\nReturns the number of bytes permitted for the next call to `write`,\nor an error. Calling `write` with more bytes than this function has\npermitted will trap.\n\nWhen this function returns 0 bytes, the `subscribe` pollable will\nbecome ready when this function will report at least 1 byte, or an\nerror."
          }
        },
        "[method]output-stream.write": {
          "name": "[method]output-stream.write",
          "kind": {
            "method": 11
          },
          "params": [
            {
              "name": "self",
              "type": 16
            },
            {
              "name": "contents",
              "type": 13
            }
          ],
          "results": [
            {
              "type": 17
            }
          ],
          "docs": {
            "contents": "Perform a write. This function never blocks.\n\nPrecondition: check-write gave permit of Ok(n) and contents has a\nlength of less than or equal to n. Otherwise, this function will trap.\n\nreturns Err(closed) without writing if the stream has closed since\nthe last call to check-write provided a permit."
          }
        },
        "[method]output-stream.blocking-write-and-flush": {
          "name": "[method]output-stream.blocking-write-and-flush",
          "kind": {
            "method": 11
          },
          "params": [
            {
              "name": "self",
              "type": 16
            },
            {
              "name": "contents",
              "type": 13
            }
          ],
          "results": [
            {
              "type": 17
            }
          ],
          "docs": {
            "contents": "Perform a write of up to 4096 bytes, and then flush the stream. Block\nuntil all of these operations are complete, or an error occurs.\n\nThis is a convenience wrapper around the use of `check-write`,\n`subscribe`, `write`, and `flush`, and is implemented with the\nfollowing pseudo-code:\n\n```text\nlet pollable = this.subscribe();\nwhile !contents.is_empty() {\n// Wait for the stream to become writable\npoll-one(pollable);\nlet Ok(n) = this.check-write(); // eliding error handling\nlet len = min(n, contents.len());\nlet (chunk, rest) = contents.split_at(len);\nthis.write(chunk  );            // eliding error handling\ncontents = rest;\n}\nthis.flush();\n// Wait for completion of `flush`\npoll-one(pollable);\n// Check for any errors that arose during `flush`\nlet _ = this.check-write();         // eliding error handling\n```"
          }
        },
        "[method]output-stream.flush": {
          "name": "[method]output-stream.flush",
          "kind": {
            "method": 11
          },
          "params": [
            {
              "name": "self",
              "type": 16
            }
          ],
          "results": [
            {
              "type": 17
            }
          ],
          "docs": {
            "contents": "Request to flush buffered output. This function never blocks.\n\nThis tells the output-stream that the caller intends any buffered\noutput to be flushed. the output which is expected to be flushed\nis all that has been passed to `write` prior to this call.\n\nUpon calling this function, the `output-stream` will not accept any\nwrites (`check-write` will return `ok(0)`) until the flush has\ncompleted. The `subscribe` pollable will become ready when the\nflush has completed and the stream can accept more writes."
          }
        },
        "[method]output-stream.blocking-flush": {
          "name": "[method]output-stream.blocking-flush",
          "kind": {
            "method": 11
          },
          "params": [
            {
              "name": "self",
              "type": 16
            }
          ],
          "results": [
            {
              "type": 17
            }
          ],
          "docs": {
            "contents": "Request to flush buffered output, and block until flush completes\nand stream is ready for writing again."
          }
        },
        "[method]output-stream.subscribe": {
          "name": "[method]output-stream.subscribe",
          "kind": {
            "method": 11
          },
          "params": [
            {
              "name": "self",
              "type": 16
            }
          ],
          "results": [
            {
              "type": 18
            }
          ],
          "docs": {
            "contents": "Create a `pollable` which will resolve once the output-stream\nis ready for more writing, or an error has occured. When this\npollable is ready, `check-write` will return `ok(n)` with n>0, or an\nerror.\n\nIf the stream is closed, this pollable is always ready immediately.\n\nThe created `pollable` is a child resource of the `output-stream`.\nImplementations may trap if the `output-stream` is dropped before\nall derived `pollable`s created with this function are dropped."
          }
        },
        "[method]output-stream.write-zeroes": {
          "name": "[method]output-stream.write-zeroes",
          "kind": {
            "method": 11
          },
          "params": [
            {
              "name": "self",
              "type": 16
            },
            {
              "name": "len",
              "type": "u64"
            }
          ],
          "results": [
            {
              "type": 17
            }
          ],
          "docs": {
            "contents": "Write zeroes to a stream.\n\nthis should be used precisely like `write` with the exact same\npreconditions (must use check-write first), but instead of\npassing a list of bytes, you simply pass the number of zero-bytes\nthat should be written."
          }
        },
        "[method]output-stream.blocking-write-zeroes-and-flush": {
          "name": "[method]output-stream.blocking-write-zeroes-and-flush",
          "kind": {
            "method": 11
          },
          "params": [
            {
              "name": "self",
              "type": 16
            },
            {
              "name": "len",
              "type": "u64"
            }
          ],
          "results": [
            {
              "type": 17
            }
          ],
          "docs": {
            "contents": "Perform a write of up to 4096 zeroes, and then flush the stream.\nBlock until all of these operations are complete, or an error\noccurs.\n\nThis is a convenience wrapper around the use of `check-write`,\n`subscribe`, `write-zeroes`, and `flush`, and is implemented with\nthe following pseudo-code:\n\n```text\nlet pollable = this.subscribe();\nwhile num_zeroes != 0 {\n// Wait for the stream to become writable\npoll-one(pollable);\nlet Ok(n) = this.check-write(); // eliding error handling\nlet len = min(n, num_zeroes);\nthis.write-zeroes(len);         // eliding error handling\nnum_zeroes -= len;\n}\nthis.flush();\n// Wait for completion of `flush`\npoll-one(pollable);\n// Check for any errors that arose during `flush`\nlet _ = this.check-write();         // eliding error handling\n```"
          }
        },
        "[method]output-stream.splice": {
          "name": "[method]output-stream.splice",
          "kind": {
            "method": 11
          },
          "params": [
            {
              "name": "self",
              "type": 16
            },
            {
              "name": "src",
              "type": 12
            },
            {
              "name": "len",
              "type": "u64"
            }
          ],
          "results": [
            {
              "type": 15
            }
          ],
          "docs": {
            "contents": "Read from one stream and write to another.\n\nThe behavior of splice is equivelant to:\n1. calling `check-write` on the `output-stream`\n2. calling `read` on the `input-stream` with the smaller of the\n`check-write` permitted length and the `len` provided to `splice`\n3. calling `write` on the `output-stream` with that read data.\n\nAny error reported by the call to `check-write`, `read`, or\n`write` ends the splice and reports that error.\n\nThis function returns the number of bytes transferred; it may be less\nthan `len`."
          }
        },
        "[method]output-stream.blocking-splice": {
          "name": "[method]output-stream.blocking-splice",
          "kind": {
            "method": 11
          },
          "params": [
            {
              "name": "self",
              "type": 16
            },
            {
              "name": "src",
              "type": 12
            },
            {
              "name": "len",
              "type": "u64"
            }
          ],
          "results": [
            {
              "type": 15
            }
          ],
          "docs": {
            "contents": "Read from one stream and write to another, with blocking.\n\nThis is similar to `splice`, except that it blocks until the\n`output-stream` is ready for writing, and the `input-stream`\nis ready for reading, before performing the `splice`."
          }
        }
      },
      "docs": {
        "contents": "WASI I/O is an I/O abstraction API which is currently focused on providing\nstream types.\n\nIn the future, the component model is expected to add built-in stream types;\nwhen it does, they are expected to subsume this API."
      },
      "package": 0
    },
    {
      "name": "monotonic-clock",
      "types": {
        "pollable": 19,
        "instant": 20,
        "duration": 21
      },
      "functions": {
        "now": {
          "name": "now",
          "kind": "freestanding",
          "params": [],
          "results": [
            {
              "type": 20
            }
          ],
          "docs": {
            "contents": "Read the current value of the clock.\n\nThe clock is monotonic, therefore calling this function repeatedly will\nproduce a sequence of non-decreasing values."
          }
        },
        "resolution": {
          "name": "resolution",
          "kind": "freestanding",
          "params": [],
          "results": [
            {
              "type": 21
            }
          ],
          "docs": {
            "contents": "Query the resolution of the clock. Returns the duration of time\ncorresponding to a clock tick."
          }
        },
        "subscribe-instant": {
          "name": "subscribe-instant",
          "kind": "freestanding",
          "params": [
            {
              "name": "when",
              "type": 20
            }
          ],
          "results": [
            {
              "type": 23
            }
          ],
          "docs": {
            "contents": "Create a `pollable` which will resolve once the specified instant\noccured."
          }
        },
        "subscribe-duration": {
          "name": "subscribe-duration",
          "kind": "freestanding",
          "params": [
            {
              "name": "when",
              "type": 21
            }
          ],
          "results": [
            {
              "type": 23
            }
          ],
          "docs": {
            "contents": "Create a `pollable` which will resolve once the given duration has\nelapsed, starting at the time at which this function was called.\noccured."
          }
        }
      },
      "docs": {
        "contents": "WASI Monotonic Clock is a clock API intended to let users measure elapsed\ntime.\n\nIt is intended to be portable at least between Unix-family platforms and\nWindows.\n\nA monotonic clock is a clock which has an unspecified initial value, and\nsuccessive reads of the clock will produce non-decreasing values.\n\nIt is intended for measuring elapsed time."
      },
      "package": 1
    },
    {
      "name": "wall-clock",
      "types": {
        "datetime": 22
      },
      "functions": {
        "now": {
          "name": "now",
          "kind": "freestanding",
          "params": [],
          "results": [
            {
              "type": 22
            }
          ],
          "docs": {
            "contents": "Read the current value of the clock.\n\nThis clock is not monotonic, therefore calling this function repeatedly\nwill not necessarily produce a sequence of non-decreasing values.\n\nThe returned timestamps represent the number of seconds since\n1970-01-01T00:00:00Z, also known as [POSIX's Seconds Since the Epoch],\nalso known as [Unix Time].\n\nThe nanoseconds field of the output is always less than 1000000000.\n\n[POSIX's Seconds Since the Epoch]: https://pubs.opengroup.org/onlinepubs/9699919799/xrat/V4_xbd_chap04.html#tag_21_04_16\n[Unix Time]: https://en.wikipedia.org/wiki/Unix_time"
          }
        },
        "resolution": {
          "name": "resolution",
          "kind": "freestanding",
          "params": [],
          "results": [
            {
              "type": 22
            }
          ],
          "docs": {
            "contents": "Query the resolution of the clock.\n\nThe nanoseconds field of the output is always less than 1000000000."
          }
        }
      },
      "docs": {
        "contents": "WASI Wall Clock is a clock API intended to let users query the current\ntime. The name \"wall\" makes an analogy to a \"clock on the wall\", which\nis not necessarily monotonic as it may be reset.\n\nIt is intended to be portable at least between Unix-family platforms and\nWindows.\n\nA wall clock is a clock which measures the date and time according to\nsome external reference.\n\nExternal references may be reset, so this clock is not necessarily\nmonotonic, making it unsuitable for measuring elapsed time.\n\nIt is intended for reporting the current date and time for humans."
      },
      "package": 1
    },
    {
      "name": "types",
      "types": {
        "input-stream": 24,
        "output-stream": 25,
        "error": 26,
        "datetime": 27,
        "filesize": 28,
        "descriptor-type": 29,
        "descriptor-flags": 30,
        "path-flags": 31,
        "open-flags": 32,
        "link-count": 33,
        "descriptor-stat": 35,
        "new-timestamp": 36,
        "directory-entry": 37,
        "error-code": 38,
        "advice": 39,
        "metadata-hash-value": 40,
        "descriptor": 41,
        "directory-entry-stream": 42
      },
      "functions": {
        "[method]descriptor.read-via-stream": {
          "name": "[method]descriptor.read-via-stream",
          "kind": {
            "method": 41
          },
          "params": [
            {
              "name": "self",
              "type": 43
            },
            {
              "name": "offset",
              "type": 28
            }
          ],
          "results": [
            {
              "type": 45
            }
          ],
          "docs": {
            "contents": "Return a stream for reading from a file, if available.\n\nMay fail with an error-code describing why the file cannot be read.\n\nMultiple read, write, and append streams may be active on the same open\nfile and they do not interfere with each other.\n\nNote: This allows using `read-stream`, which is similar to `read` in POSIX."
          }
        },
        "[method]descriptor.write-via-stream": {
          "name": "[method]descriptor.write-via-stream",
          "kind": {
            "method": 41
          },
          "params": [
            {
              "name": "self",
              "type": 43
            },
            {
              "name": "offset",
              "type": 28
            }
          ],
          "results": [
            {
              "type": 47
            }
          ],
          "docs": {
            "contents": "Return a stream for writing to a file, if available.\n\nMay fail with an error-code describing why the file cannot be written.\n\nNote: This allows using `write-stream`, which is similar to `write` in\nPOSIX."
          }
        },
        "[method]descriptor.append-via-stream": {
          "name": "[method]descriptor.append-via-stream",
          "kind": {
            "method": 41
          },
          "params": [
            {
              "name": "self",
              "type": 43
            }
          ],
          "results": [
            {
              "type": 47
            }
          ],
          "docs": {
            "contents": "Return a stream for appending to a file, if available.\n\nMay fail with an error-code describing why the file cannot be appended.\n\nNote: This allows using `write-stream`, which is similar to `write` with\n`O_APPEND` in in POSIX."
          }
        },
        "[method]descriptor.advise": {
          "name": "[method]descriptor.advise",
          "kind": {
            "method": 41
          },
          "params": [
            {
              "name": "self",
              "type": 43
            },
            {
              "name": "offset",
              "type": 28
            },
            {
              "name": "length",
              "type": 28
            },
            {
              "name": "advice",
              "type": 39
            }
          ],
          "results": [
            {
              "type": 48
            }
          ],
          "docs": {
            "contents": "Provide file advisory information on a descriptor.\n\nThis is similar to `posix_fadvise` in POSIX."
          }
        },
        "[method]descriptor.sync-data": {
          "name": "[method]descriptor.sync-data",
          "kind": {
            "method": 41
          },
          "params": [
            {
              "name": "self",
              "type": 43
            }
          ],
          "results": [
            {
              "type": 48
            }
          ],
          "docs": {
            "contents": "Synchronize the data of a file to disk.\n\nThis function succeeds with no effect if the file descriptor is not\nopened for writing.\n\nNote: This is similar to `fdatasync` in POSIX."
          }
        },
        "[method]descriptor.get-flags": {
          "name": "[method]descriptor.get-flags",
          "kind": {
            "method": 41
          },
          "params": [
            {
              "name": "self",
              "type": 43
            }
          ],
          "results": [
            {
              "type": 49
            }
          ],
          "docs": {
            "contents": "Get flags associated with a descriptor.\n\nNote: This returns similar flags to `fcntl(fd, F_GETFL)` in POSIX.\n\nNote: This returns the value that was the `fs_flags` value returned\nfrom `fdstat_get` in earlier versions of WASI."
          }
        },
        "[method]descriptor.get-type": {
          "name": "[method]descriptor.get-type",
          "kind": {
            "method": 41
          },
          "params": [
            {
              "name": "self",
              "type": 43
            }
          ],
          "results": [
            {
              "type": 50
            }
          ],
          "docs": {
            "contents": "Get the dynamic type of a descriptor.\n\nNote: This returns the same value as the `type` field of the `fd-stat`\nreturned by `stat`, `stat-at` and similar.\n\nNote: This returns similar flags to the `st_mode & S_IFMT` value provided\nby `fstat` in POSIX.\n\nNote: This returns the value that was the `fs_filetype` value returned\nfrom `fdstat_get` in earlier versions of WASI."
          }
        },
        "[method]descriptor.set-size": {
          "name": "[method]descriptor.set-size",
          "kind": {
            "method": 41
          },
          "params": [
            {
              "name": "self",
              "type": 43
            },
            {
              "name": "size",
              "type": 28
            }
          ],
          "results": [
            {
              "type": 48
            }
          ],
          "docs": {
            "contents": "Adjust the size of an open file. If this increases the file's size, the\nextra bytes are filled with zeros.\n\nNote: This was called `fd_filestat_set_size` in earlier versions of WASI."
          }
        },
        "[method]descriptor.set-times": {
          "name": "[method]descriptor.set-times",
          "kind": {
            "method": 41
          },
          "params": [
            {
              "name": "self",
              "type": 43
            },
            {
              "name": "data-access-timestamp",
              "type": 36
            },
            {
              "name": "data-modification-timestamp",
              "type": 36
            }
          ],
          "results": [
            {
              "type": 48
            }
          ],
          "docs": {
            "contents": "Adjust the timestamps of an open file or directory.\n\nNote: This is similar to `futimens` in POSIX.\n\nNote: This was called `fd_filestat_set_times` in earlier versions of WASI."
          }
        },
        "[method]descriptor.read": {
          "name": "[method]descriptor.read",
          "kind": {
            "method": 41
          },
          "params": [
            {
              "name": "self",
              "type": 43
            },
            {
              "name": "length",
              "type": 28
            },
            {
              "name": "offset",
              "type": 28
            }
          ],
          "results": [
            {
              "type": 53
            }
          ],
          "docs": {
            "contents": "Read from a descriptor, without using and updating the descriptor's offset.\n\nThis function returns a list of bytes containing the data that was\nread, along with a bool which, when true, indicates that the end of the\nfile was reached. The returned list will contain up to `length` bytes; it\nmay return fewer than requested, if the end of the file is reached or\nif the I/O operation is interrupted.\n\nIn the future, this may change to return a `stream<u8, error-code>`.\n\nNote: This is similar to `pread` in POSIX."
          }
        },
        "[method]descriptor.write": {
          "name": "[method]descriptor.write",
          "kind": {
            "method": 41
          },
          "params": [
            {
              "name": "self",
              "type": 43
            },
            {
              "name": "buffer",
              "type": 51
            },
            {
              "name": "offset",
              "type": 28
            }
          ],
          "results": [
            {
              "type": 54
            }
          ],
          "docs": {
            "contents": "Write to a descriptor, without using and updating the descriptor's offset.\n\nIt is valid to write past the end of a file; the file is extended to the\nextent of the write, with bytes between the previous end and the start of\nthe write set to zero.\n\nIn the future, this may change to take a `stream<u8, error-code>`.\n\nNote: This is similar to `pwrite` in POSIX."
          }
        },
        "[method]descriptor.read-directory": {
          "name": "[method]descriptor.read-directory",
          "kind": {
            "method": 41
          },
          "params": [
            {
              "name": "self",
              "type": 43
            }
          ],
          "results": [
            {
              "type": 56
            }
          ],
          "docs": {
            "contents": "Read directory entries from a directory.\n\nOn filesystems where directories contain entries referring to themselves\nand their parents, often named `.` and `..` respectively, these entries\nare omitted.\n\nThis always returns a new stream which starts at the beginning of the\ndirectory. Multiple streams may be active on the same directory, and they\ndo not interfere with each other."
          }
        },
        "[method]descriptor.sync": {
          "name": "[method]descriptor.sync",
          "kind": {
            "method": 41
          },
          "params": [
            {
              "name": "self",
              "type": 43
            }
          ],
          "results": [
            {
              "type": 48
            }
          ],
          "docs": {
            "contents": "Synchronize the data and metadata of a file to disk.\n\nThis function succeeds with no effect if the file descriptor is not\nopened for writing.\n\nNote: This is similar to `fsync` in POSIX."
          }
        },
        "[method]descriptor.create-directory-at": {
          "name": "[method]descriptor.create-directory-at",
          "kind": {
            "method": 41
          },
          "params": [
            {
              "name": "self",
              "type": 43
            },
            {
              "name": "path",
              "type": "string"
            }
          ],
          "results": [
            {
              "type": 48
            }
          ],
          "docs": {
            "contents": "Create a directory.\n\nNote: This is similar to `mkdirat` in POSIX."
          }
        },
        "[method]descriptor.stat": {
          "name": "[method]descriptor.stat",
          "kind": {
            "method": 41
          },
          "params": [
            {
              "name": "self",
              "type": 43
            }
          ],
          "results": [
            {
              "type": 57
            }
          ],
          "docs": {
            "contents": "Return the attributes of an open file or directory.\n\nNote: This is similar to `fstat` in POSIX, except that it does not return\ndevice and inode information. For testing whether two descriptors refer to\nthe same underlying filesystem object, use `is-same-object`. To obtain\nadditional data that can be used do determine whether a file has been\nmodified, use `metadata-hash`.\n\nNote: This was called `fd_filestat_get` in earlier versions of WASI."
          }
        },
        "[method]descriptor.stat-at": {
          "name": "[method]descriptor.stat-at",
          "kind": {
            "method": 41
          },
          "params": [
            {
              "name": "self",
              "type": 43
            },
            {
              "name": "path-flags",
              "type": 31
            },
            {
              "name": "path",
              "type": "string"
            }
          ],
          "results": [
            {
              "type": 57
            }
          ],
          "docs": {
            "contents": "Return the attributes of a file or directory.\n\nNote: This is similar to `fstatat` in POSIX, except that it does not\nreturn device and inode information. See the `stat` description for a\ndiscussion of alternatives.\n\nNote: This was called `path_filestat_get` in earlier versions of WASI."
          }
        },
        "[method]descriptor.set-times-at": {
          "name": "[method]descriptor.set-times-at",
          "kind": {
            "method": 41
          },
          "params": [
            {
              "name": "self",
              "type": 43
            },
            {
              "name": "path-flags",
              "type": 31
            },
            {
              "name": "path",
              "type": "string"
            },
            {
              "name": "data-access-timestamp",
              "type": 36
            },
            {
              "name": "data-modification-timestamp",
              "type": 36
            }
          ],
          "results": [
            {
              "type": 48
            }
          ],
          "docs": {
            "contents": "Adjust the timestamps of a file or directory.\n\nNote: This is similar to `utimensat` in POSIX.\n\nNote: This was called `path_filestat_set_times` in earlier versions of\nWASI."
          }
        },
        "[method]descriptor.link-at": {
          "name": "[method]descriptor.link-at",
          "kind": {
            "method": 41
          },
          "params": [
            {
              "name": "self",
              "type": 43
            },
            {
              "name": "old-path-flags",
              "type": 31
            },
            {
              "name": "old-path",
              "type": "string"
            },
            {
              "name": "new-descriptor",
              "type": 43
            },
            {
              "name": "new-path",
              "type": "string"
            }
          ],
          "results": [
            {
              "type": 48
            }
          ],
          "docs": {
            "contents": "Create a hard link.\n\nNote: This is similar to `linkat` in POSIX."
          }
        },
        "[method]descriptor.open-at": {
          "name": "[method]descriptor.open-at",
          "kind": {
            "method": 41
          },
          "params": [
            {
              "name": "self",
              "type": 43
            },
            {
              "name": "path-flags",
              "type": 31
            },
            {
              "name": "path",
              "type": "string"
            },
            {
              "name": "open-flags",
              "type": 32
            },
            {
              "name": "flags",
              "type": 30
            }
          ],
          "results": [
            {
              "type": 59
            }
          ],
          "docs": {
            "contents": "Open a file or directory.\n\nThe returned descriptor is not guaranteed to be the lowest-numbered\ndescriptor not currently open/ it is randomized to prevent applications\nfrom depending on making assumptions about indexes, since this is\nerror-prone in multi-threaded contexts. The returned descriptor is\nguaranteed to be less than 2**31.\n\nIf `flags` contains `descriptor-flags::mutate-directory`, and the base\ndescriptor doesn't have `descriptor-flags::mutate-directory` set,\n`open-at` fails with `error-code::read-only`.\n\nIf `flags` contains `write` or `mutate-directory`, or `open-flags`\ncontains `truncate` or `create`, and the base descriptor doesn't have\n`descriptor-flags::mutate-directory` set, `open-at` fails with\n`error-code::read-only`.\n\nNote: This is similar to `openat` in POSIX."
          }
        },
        "[method]descriptor.readlink-at": {
          "name": "[method]descriptor.readlink-at",
          "kind": {
            "method": 41
          },
          "params": [
            {
              "name": "self",
              "type": 43
            },
            {
              "name": "path",
              "type": "string"
            }
          ],
          "results": [
            {
              "type": 60
            }
          ],
          "docs": {
            "contents": "Read the contents of a symbolic link.\n\nIf the contents contain an absolute or rooted path in the underlying\nfilesystem, this function fails with `error-code::not-permitted`.\n\nNote: This is similar to `readlinkat` in POSIX."
          }
        },
        "[method]descriptor.remove-directory-at": {
          "name": "[method]descriptor.remove-directory-at",
          "kind": {
            "method": 41
          },
          "params": [
            {
              "name": "self",
              "type": 43
            },
            {
              "name": "path",
              "type": "string"
            }
          ],
          "results": [
            {
              "type": 48
            }
          ],
          "docs": {
            "contents": "Remove a directory.\n\nReturn `error-code::not-empty` if the directory is not empty.\n\nNote: This is similar to `unlinkat(fd, path, AT_REMOVEDIR)` in POSIX."
          }
        },
        "[method]descriptor.rename-at": {
          "name": "[method]descriptor.rename-at",
          "kind": {
            "method": 41
          },
          "params": [
            {
              "name": "self",
              "type": 43
            },
            {
              "name": "old-path",
              "type": "string"
            },
            {
              "name": "new-descriptor",
              "type": 43
            },
            {
              "name": "new-path",
              "type": "string"
            }
          ],
          "results": [
            {
              "type": 48
            }
          ],
          "docs": {
            "contents": "Rename a filesystem object.\n\nNote: This is similar to `renameat` in POSIX."
          }
        },
        "[method]descriptor.symlink-at": {
          "name": "[method]descriptor.symlink-at",
          "kind": {
            "method": 41
          },
          "params": [
            {
              "name": "self",
              "type": 43
            },
            {
              "name": "old-path",
              "type": "string"
            },
            {
              "name": "new-path",
              "type": "string"
            }
          ],
          "results": [
            {
              "type": 48
            }
          ],
          "docs": {
            "contents": "Create a symbolic link (also known as a \"symlink\").\n\nIf `old-path` starts with `/`, the function fails with\n`error-code::not-permitted`.\n\nNote: This is similar to `symlinkat` in POSIX."
          }
        },
        "[method]descriptor.unlink-file-at": {
          "name": "[method]descriptor.unlink-file-at",
          "kind": {
            "method": 41
          },
          "params": [
            {
              "name": "self",
              "type": 43
            },
            {
              "name": "path",
              "type": "string"
            }
          ],
          "results": [
            {
              "type": 48
            }
          ],
          "docs": {
            "contents": "Unlink a filesystem object that is not a directory.\n\nReturn `error-code::is-directory` if the path refers to a directory.\nNote: This is similar to `unlinkat(fd, path, 0)` in POSIX."
          }
        },
        "[method]descriptor.is-same-object": {
          "name": "[method]descriptor.is-same-object",
          "kind": {
            "method": 41
          },
          "params": [
            {
              "name": "self",
              "type": 43
            },
            {
              "name": "other",
              "type": 43
            }
          ],
          "results": [
            {
              "type": "bool"
            }
          ],
          "docs": {
            "contents": "Test whether two descriptors refer to the same filesystem object.\n\nIn POSIX, this corresponds to testing whether the two descriptors have the\nsame device (`st_dev`) and inode (`st_ino` or `d_ino`) numbers.\nwasi-filesystem does not expose device and inode numbers, so this function\nmay be used instead."
          }
        },
        "[method]descriptor.metadata-hash": {
          "name": "[method]descriptor.metadata-hash",
          "kind": {
            "method": 41
          },
          "params": [
            {
              "name": "self",
              "type": 43
            }
          ],
          "results": [
            {
              "type": 61
            }
          ],
          "docs": {
            "contents": "Return a hash of the metadata associated with a filesystem object referred\nto by a descriptor.\n\nThis returns a hash of the last-modification timestamp and file size, and\nmay also include the inode number, device number, birth timestamp, and\nother metadata fields that may change when the file is modified or\nreplaced. It may also include a secret value chosen by the\nimplementation and not otherwise exposed.\n\nImplementations are encourated to provide the following properties:\n\n- If the file is not modified or replaced, the computed hash value should\nusually not change.\n- If the object is modified or replaced, the computed hash value should\nusually change.\n- The inputs to the hash should not be easily computable from the\ncomputed hash.\n\nHowever, none of these is required."
          }
        },
        "[method]descriptor.metadata-hash-at": {
          "name": "[method]descriptor.metadata-hash-at",
          "kind": {
            "method": 41
          },
          "params": [
            {
              "name": "self",
              "type": 43
            },
            {
              "name": "path-flags",
              "type": 31
            },
            {
              "name": "path",
              "type": "string"
            }
          ],
          "results": [
            {
              "type": 61
            }
          ],
          "docs": {
            "contents": "Return a hash of the metadata associated with a filesystem object referred\nto by a directory descriptor and a relative path.\n\nThis performs the same hash computation as `metadata-hash`."
          }
        },
        "[method]directory-entry-stream.read-directory-entry": {
          "name": "[method]directory-entry-stream.read-directory-entry",
          "kind": {
            "method": 42
          },
          "params": [
            {
              "name": "self",
              "type": 62
            }
          ],
          "results": [
            {
              "type": 64
            }
          ],
          "docs": {
            "contents": "Read a single directory entry from a `directory-entry-stream`."
          }
        },
        "filesystem-error-code": {
          "name": "filesystem-error-code",
          "kind": "freestanding",
          "params": [
            {
              "name": "err",
              "type": 65
            }
          ],
          "results": [
            {
              "type": 66
            }
          ],
          "docs": {
            "contents": "Attempts to extract a filesystem-related `error-code` from the stream\n`error` provided.\n\nStream operations which return `stream-error::last-operation-failed`\nhave a payload with more information about the operation that failed.\nThis payload can be passed through to this function to see if there's\nfilesystem-related information about the error to return.\n\nNote that this function is fallible because not all stream-related\nerrors are filesystem-related errors."
          }
        }
      },
      "docs": {
        "contents": "WASI filesystem is a filesystem API primarily intended to let users run WASI\nprograms that access their files on their existing filesystems, without\nsignificant overhead.\n\nIt is intended to be roughly portable between Unix-family platforms and\nWindows, though it does not hide many of the major differences.\n\nPaths are passed as interface-type `string`s, meaning they must consist of\na sequence of Unicode Scalar Values (USVs). Some filesystems may contain\npaths which are not accessible by this API.\n\nThe directory separator in WASI is always the forward-slash (`/`).\n\nAll paths in WASI are relative paths, and are interpreted relative to a\n`descriptor` referring to a base directory. If a `path` argument to any WASI\nfunction starts with `/`, or if any step of resolving a `path`, including\n`..` and symbolic link steps, reaches a directory outside of the base\ndirectory, or reaches a symlink to an absolute or rooted path in the\nunderlying filesystem, the function fails with `error-code::not-permitted`.\n\nFor more information about WASI path resolution and sandboxing, see\n[WASI filesystem path resolution].\n\n[WASI filesystem path resolution]: https://github.com/WebAssembly/wasi-filesystem/blob/main/path-resolution.md"
      },
      "package": 2
    },
    {
      "name": "preopens",
      "types": {
        "descriptor": 67
      },
      "functions": {
        "get-directories": {
          "name": "get-directories",
          "kind": "freestanding",
          "params": [],
          "results": [
            {
              "type": 70
            }
          ],
          "docs": {
            "contents": "Return the set of preopened directories, and their path."
          }
        }
      },
      "package": 2
    },
    {
      "name": "network",
      "types": {
        "network": 71,
        "error-code": 72,
        "ip-address-family": 73,
        "ipv4-address": 74,
        "ipv6-address": 75,
        "ip-address": 76,
        "ipv4-socket-address": 77,
        "ipv6-socket-address": 78,
        "ip-socket-address": 79
      },
      "functions": {},
      "package": 3
    },
    {
      "name": "instance-network",
      "types": {
        "network": 80
      },
      "functions": {
        "instance-network": {
          "name": "instance-network",
          "kind": "freestanding",
          "params": [],
          "results": [
            {
              "type": 158
            }
          ],
          "docs": {
            "contents": "Get a handle to the default network."
          }
        }
      },
      "docs": {
        "contents": "This interface provides a value-export of the default network handle.."
      },
      "package": 3
    },
    {
      "name": "ip-name-lookup",
      "types": {
        "pollable": 81,
        "network": 82,
        "error-code": 83,
        "ip-address": 84,
        "resolve-address-stream": 85
      },
      "functions": {
        "resolve-addresses": {
          "name": "resolve-addresses",
          "kind": "freestanding",
          "params": [
            {
              "name": "network",
              "type": 86
            },
            {
              "name": "name",
              "type": "string"
            }
          ],
          "results": [
            {
              "type": 88
            }
          ],
          "docs": {
            "contents": "Resolve an internet host name to a list of IP addresses.\n\nUnicode domain names are automatically converted to ASCII using IDNA encoding.\nIf the input is an IP address string, the address is parsed and returned\nas-is without making any external requests.\n\nSee the wasi-socket proposal README.md for a comparison with getaddrinfo.\n\nThis function never blocks. It either immediately fails or immediately\nreturns successfully with a `resolve-address-stream` that can be used\nto (asynchronously) fetch the results.\n\n# Typical errors\n- `invalid-argument`: `name` is a syntactically invalid domain name or IP address.\n\n# References:\n- <https://pubs.opengroup.org/onlinepubs/9699919799/functions/getaddrinfo.html>\n- <https://man7.org/linux/man-pages/man3/getaddrinfo.3.html>\n- <https://learn.microsoft.com/en-us/windows/win32/api/ws2tcpip/nf-ws2tcpip-getaddrinfo>\n- <https://man.freebsd.org/cgi/man.cgi?query=getaddrinfo&sektion=3>"
          }
        },
        "[method]resolve-address-stream.resolve-next-address": {
          "name": "[method]resolve-address-stream.resolve-next-address",
          "kind": {
            "method": 85
          },
          "params": [
            {
              "name": "self",
              "type": 89
            }
          ],
          "results": [
            {
              "type": 91
            }
          ],
          "docs": {
            "contents": "Returns the next address from the resolver.\n\nThis function should be called multiple times. On each call, it will\nreturn the next address in connection order preference. If all\naddresses have been exhausted, this function returns `none`.\n\nThis function never returns IPv4-mapped IPv6 addresses.\n\n# Typical errors\n- `name-unresolvable`:          Name does not exist or has no suitable associated IP addresses. (EAI_NONAME, EAI_NODATA, EAI_ADDRFAMILY)\n- `temporary-resolver-failure`: A temporary failure in name resolution occurred. (EAI_AGAIN)\n- `permanent-resolver-failure`: A permanent failure in name resolution occurred. (EAI_FAIL)\n- `would-block`:                A result is not available yet. (EWOULDBLOCK, EAGAIN)"
          }
        },
        "[method]resolve-address-stream.subscribe": {
          "name": "[method]resolve-address-stream.subscribe",
          "kind": {
            "method": 85
          },
          "params": [
            {
              "name": "self",
              "type": 89
            }
          ],
          "results": [
            {
              "type": 159
            }
          ],
          "docs": {
            "contents": "Create a `pollable` which will resolve once the stream is ready for I/O.\n\nNote: this function is here for WASI Preview2 only.\nIt's planned to be removed when `future` is natively supported in Preview3."
          }
        }
      },
      "package": 3
    },
    {
      "name": "tcp",
      "types": {
        "input-stream": 92,
        "output-stream": 93,
        "pollable": 94,
        "duration": 95,
        "network": 96,
        "error-code": 97,
        "ip-socket-address": 98,
        "ip-address-family": 99,
        "shutdown-type": 100,
        "tcp-socket": 101
      },
      "functions": {
        "[method]tcp-socket.start-bind": {
          "name": "[method]tcp-socket.start-bind",
          "kind": {
            "method": 101
          },
          "params": [
            {
              "name": "self",
              "type": 102
            },
            {
              "name": "network",
              "type": 103
            },
            {
              "name": "local-address",
              "type": 98
            }
          ],
          "results": [
            {
              "type": 104
            }
          ],
          "docs": {
            "contents": "Bind the socket to a specific network on the provided IP address and port.\n\nIf the IP address is zero (`0.0.0.0` in IPv4, `::` in IPv6), it is left to the implementation to decide which\nnetwork interface(s) to bind to.\nIf the TCP/UDP port is zero, the socket will be bound to a random free port.\n\nWhen a socket is not explicitly bound, the first invocation to a listen or connect operation will\nimplicitly bind the socket.\n\nUnlike in POSIX, this function is async. This enables interactive WASI hosts to inject permission prompts.\n\n# Typical `start` errors\n- `invalid-argument`:          The `local-address` has the wrong address family. (EAFNOSUPPORT, EFAULT on Windows)\n- `invalid-argument`:          `local-address` is not a unicast address. (EINVAL)\n- `invalid-argument`:          `local-address` is an IPv4-mapped IPv6 address, but the socket has `ipv6-only` enabled. (EINVAL)\n- `invalid-state`:             The socket is already bound. (EINVAL)\n\n# Typical `finish` errors\n- `address-in-use`:            No ephemeral ports available. (EADDRINUSE, ENOBUFS on Windows)\n- `address-in-use`:            Address is already in use. (EADDRINUSE)\n- `address-not-bindable`:      `local-address` is not an address that the `network` can bind to. (EADDRNOTAVAIL)\n- `not-in-progress`:           A `bind` operation is not in progress.\n- `would-block`:               Can't finish the operation, it is still in progress. (EWOULDBLOCK, EAGAIN)\n\n# References\n- <https://pubs.opengroup.org/onlinepubs/9699919799/functions/bind.html>\n- <https://man7.org/linux/man-pages/man2/bind.2.html>\n- <https://learn.microsoft.com/en-us/windows/win32/api/winsock/nf-winsock-bind>\n- <https://man.freebsd.org/cgi/man.cgi?query=bind&sektion=2&format=html>"
          }
        },
        "[method]tcp-socket.finish-bind": {
          "name": "[method]tcp-socket.finish-bind",
          "kind": {
            "method": 101
          },
          "params": [
            {
              "name": "self",
              "type": 102
            }
          ],
          "results": [
            {
              "type": 104
            }
          ]
        },
        "[method]tcp-socket.start-connect": {
          "name": "[method]tcp-socket.start-connect",
          "kind": {
            "method": 101
          },
          "params": [
            {
              "name": "self",
              "type": 102
            },
            {
              "name": "network",
              "type": 103
            },
            {
              "name": "remote-address",
              "type": 98
            }
          ],
          "results": [
            {
              "type": 104
            }
          ],
          "docs": {
            "contents": "Connect to a remote endpoint.\n\nOn success:\n- the socket is transitioned into the Connection state\n- a pair of streams is returned that can be used to read & write to the connection\n\nPOSIX mentions:\n> If connect() fails, the state of the socket is unspecified. Conforming applications should\n> close the file descriptor and create a new socket before attempting to reconnect.\n\nWASI prescribes the following behavior:\n- If `connect` fails because an input/state validation error, the socket should remain usable.\n- If a connection was actually attempted but failed, the socket should become unusable for further network communication.\nBesides `drop`, any method after such a failure may return an error.\n\n# Typical `start` errors\n- `invalid-argument`:          The `remote-address` has the wrong address family. (EAFNOSUPPORT)\n- `invalid-argument`:          `remote-address` is not a unicast address. (EINVAL, ENETUNREACH on Linux, EAFNOSUPPORT on MacOS)\n- `invalid-argument`:          `remote-address` is an IPv4-mapped IPv6 address, but the socket has `ipv6-only` enabled. (EINVAL, EADDRNOTAVAIL on Illumos)\n- `invalid-argument`:          `remote-address` is a non-IPv4-mapped IPv6 address, but the socket was bound to a specific IPv4-mapped IPv6 address. (or vice versa)\n- `invalid-argument`:          The IP address in `remote-address` is set to INADDR_ANY (`0.0.0.0` / `::`). (EADDRNOTAVAIL on Windows)\n- `invalid-argument`:          The port in `remote-address` is set to 0. (EADDRNOTAVAIL on Windows)\n- `invalid-argument`:          The socket is already attached to a different network. The `network` passed to `connect` must be identical to the one passed to `bind`.\n- `invalid-state`:             The socket is already in the Connection state. (EISCONN)\n- `invalid-state`:             The socket is already in the Listener state. (EOPNOTSUPP, EINVAL on Windows)\n\n# Typical `finish` errors\n- `timeout`:                   Connection timed out. (ETIMEDOUT)\n- `connection-refused`:        The connection was forcefully rejected. (ECONNREFUSED)\n- `connection-reset`:          The connection was reset. (ECONNRESET)\n- `connection-aborted`:        The connection was aborted. (ECONNABORTED)\n- `remote-unreachable`:        The remote address is not reachable. (EHOSTUNREACH, EHOSTDOWN, ENETUNREACH, ENETDOWN, ENONET)\n- `address-in-use`:            Tried to perform an implicit bind, but there were no ephemeral ports available. (EADDRINUSE, EADDRNOTAVAIL on Linux, EAGAIN on BSD)\n- `not-in-progress`:           A `connect` operation is not in progress.\n- `would-block`:               Can't finish the operation, it is still in progress. (EWOULDBLOCK, EAGAIN)\n\n# References\n- <https://pubs.opengroup.org/onlinepubs/9699919799/functions/connect.html>\n- <https://man7.org/linux/man-pages/man2/connect.2.html>\n- <https://learn.microsoft.com/en-us/windows/win32/api/winsock2/nf-winsock2-connect>\n- <https://man.freebsd.org/cgi/man.cgi?connect>"
          }
        },
        "[method]tcp-socket.finish-connect": {
          "name": "[method]tcp-socket.finish-connect",
          "kind": {
            "method": 101
          },
          "params": [
            {
              "name": "self",
              "type": 102
            }
          ],
          "results": [
            {
              "type": 108
            }
          ]
        },
        "[method]tcp-socket.start-listen": {
          "name": "[method]tcp-socket.start-listen",
          "kind": {
            "method": 101
          },
          "params": [
            {
              "name": "self",
              "type": 102
            }
          ],
          "results": [
            {
              "type": 104
            }
          ],
          "docs": {
            "contents": "Start listening for new connections.\n\nTransitions the socket into the Listener state.\n\nUnlike POSIX:\n- this function is async. This enables interactive WASI hosts to inject permission prompts.\n- the socket must already be explicitly bound.\n\n# Typical `start` errors\n- `invalid-state`:             The socket is not bound to any local address. (EDESTADDRREQ)\n- `invalid-state`:             The socket is already in the Connection state. (EISCONN, EINVAL on BSD)\n- `invalid-state`:             The socket is already in the Listener state.\n\n# Typical `finish` errors\n- `address-in-use`:            Tried to perform an implicit bind, but there were no ephemeral ports available. (EADDRINUSE)\n- `not-in-progress`:           A `listen` operation is not in progress.\n- `would-block`:               Can't finish the operation, it is still in progress. (EWOULDBLOCK, EAGAIN)\n\n# References\n- <https://pubs.opengroup.org/onlinepubs/9699919799/functions/listen.html>\n- <https://man7.org/linux/man-pages/man2/listen.2.html>\n- <https://learn.microsoft.com/en-us/windows/win32/api/winsock2/nf-winsock2-listen>\n- <https://man.freebsd.org/cgi/man.cgi?query=listen&sektion=2>"
          }
        },
        "[method]tcp-socket.finish-listen": {
          "name": "[method]tcp-socket.finish-listen",
          "kind": {
            "method": 101
          },
          "params": [
            {
              "name": "self",
              "type": 102
            }
          ],
          "results": [
            {
              "type": 104
            }
          ]
        },
        "[method]tcp-socket.accept": {
          "name": "[method]tcp-socket.accept",
          "kind": {
            "method": 101
          },
          "params": [
            {
              "name": "self",
              "type": 102
            }
          ],
          "results": [
            {
              "type": 111
            }
          ],
          "docs": {
            "contents": "Accept a new client socket.\n\nThe returned socket is bound and in the Connection state. The following properties are inherited from the listener socket:\n- `address-family`\n- `ipv6-only`\n- `keep-alive-enabled`\n- `keep-alive-idle-time`\n- `keep-alive-interval`\n- `keep-alive-count`\n- `hop-limit`\n- `receive-buffer-size`\n- `send-buffer-size`\n\nOn success, this function returns the newly accepted client socket along with\na pair of streams that can be used to read & write to the connection.\n\n# Typical errors\n- `invalid-state`:      Socket is not in the Listener state. (EINVAL)\n- `would-block`:        No pending connections at the moment. (EWOULDBLOCK, EAGAIN)\n- `connection-aborted`: An incoming connection was pending, but was terminated by the client before this listener could accept it. (ECONNABORTED)\n- `new-socket-limit`:   The new socket resource could not be created because of a system limit. (EMFILE, ENFILE)\n\n# References\n- <https://pubs.opengroup.org/onlinepubs/9699919799/functions/accept.html>\n- <https://man7.org/linux/man-pages/man2/accept.2.html>\n- <https://learn.microsoft.com/en-us/windows/win32/api/winsock2/nf-winsock2-accept>\n- <https://man.freebsd.org/cgi/man.cgi?query=accept&sektion=2>"
          }
        },
        "[method]tcp-socket.local-address": {
          "name": "[method]tcp-socket.local-address",
          "kind": {
            "method": 101
          },
          "params": [
            {
              "name": "self",
              "type": 102
            }
          ],
          "results": [
            {
              "type": 112
            }
          ],
          "docs": {
            "contents": "Get the bound local address.\n\nPOSIX mentions:\n> If the socket has not been bound to a local name, the value\n> stored in the object pointed to by `address` is unspecified.\n\nWASI is stricter and requires `local-address` to return `invalid-state` when the socket hasn't been bound yet.\n\n# Typical errors\n- `invalid-state`: The socket is not bound to any local address.\n\n# References\n- <https://pubs.opengroup.org/onlinepubs/9699919799/functions/getsockname.html>\n- <https://man7.org/linux/man-pages/man2/getsockname.2.html>\n- <https://learn.microsoft.com/en-us/windows/win32/api/winsock/nf-winsock-getsockname>\n- <https://man.freebsd.org/cgi/man.cgi?getsockname>"
          }
        },
        "[method]tcp-socket.remote-address": {
          "name": "[method]tcp-socket.remote-address",
          "kind": {
            "method": 101
          },
          "params": [
            {
              "name": "self",
              "type": 102
            }
          ],
          "results": [
            {
              "type": 112
            }
          ],
          "docs": {
            "contents": "Get the remote address.\n\n# Typical errors\n- `invalid-state`: The socket is not connected to a remote address. (ENOTCONN)\n\n# References\n- <https://pubs.opengroup.org/onlinepubs/9699919799/functions/getpeername.html>\n- <https://man7.org/linux/man-pages/man2/getpeername.2.html>\n- <https://learn.microsoft.com/en-us/windows/win32/api/winsock/nf-winsock-getpeername>\n- <https://man.freebsd.org/cgi/man.cgi?query=getpeername&sektion=2&n=1>"
          }
        },
        "[method]tcp-socket.is-listening": {
          "name": "[method]tcp-socket.is-listening",
          "kind": {
            "method": 101
          },
          "params": [
            {
              "name": "self",
              "type": 102
            }
          ],
          "results": [
            {
              "type": "bool"
            }
          ],
          "docs": {
            "contents": "Whether the socket is listening for new connections.\n\nEquivalent to the SO_ACCEPTCONN socket option."
          }
        },
        "[method]tcp-socket.address-family": {
          "name": "[method]tcp-socket.address-family",
          "kind": {
            "method": 101
          },
          "params": [
            {
              "name": "self",
              "type": 102
            }
          ],
          "results": [
            {
              "type": 99
            }
          ],
          "docs": {
            "contents": "Whether this is a IPv4 or IPv6 socket.\n\nEquivalent to the SO_DOMAIN socket option."
          }
        },
        "[method]tcp-socket.ipv6-only": {
          "name": "[method]tcp-socket.ipv6-only",
          "kind": {
            "method": 101
          },
          "params": [
            {
              "name": "self",
              "type": 102
            }
          ],
          "results": [
            {
              "type": 113
            }
          ],
          "docs": {
            "contents": "Whether IPv4 compatibility (dual-stack) mode is disabled or not.\n\nEquivalent to the IPV6_V6ONLY socket option.\n\n# Typical errors\n- `invalid-state`:        (set) The socket is already bound.\n- `not-supported`:        (get/set) `this` socket is an IPv4 socket.\n- `not-supported`:        (set) Host does not support dual-stack sockets. (Implementations are not required to.)"
          }
        },
        "[method]tcp-socket.set-ipv6-only": {
          "name": "[method]tcp-socket.set-ipv6-only",
          "kind": {
            "method": 101
          },
          "params": [
            {
              "name": "self",
              "type": 102
            },
            {
              "name": "value",
              "type": "bool"
            }
          ],
          "results": [
            {
              "type": 104
            }
          ]
        },
        "[method]tcp-socket.set-listen-backlog-size": {
          "name": "[method]tcp-socket.set-listen-backlog-size",
          "kind": {
            "method": 101
          },
          "params": [
            {
              "name": "self",
              "type": 102
            },
            {
              "name": "value",
              "type": "u64"
            }
          ],
          "results": [
            {
              "type": 104
            }
          ],
          "docs": {
            "contents": "Hints the desired listen queue size. Implementations are free to ignore this.\n\nIf the provided value is 0, an `invalid-argument` error is returned.\nAny other value will never cause an error, but it might be silently clamped and/or rounded.\n\n# Typical errors\n- `not-supported`:        (set) The platform does not support changing the backlog size after the initial listen.\n- `invalid-argument`:     (set) The provided value was 0.\n- `invalid-state`:        (set) The socket is already in the Connection state."
          }
        },
        "[method]tcp-socket.keep-alive-enabled": {
          "name": "[method]tcp-socket.keep-alive-enabled",
          "kind": {
            "method": 101
          },
          "params": [
            {
              "name": "self",
              "type": 102
            }
          ],
          "results": [
            {
              "type": 113
            }
          ],
          "docs": {
            "contents": "Enables or disables keepalive.\n\nThe keepalive behavior can be adjusted using:\n- `keep-alive-idle-time`\n- `keep-alive-interval`\n- `keep-alive-count`\nThese properties can be configured while `keep-alive-enabled` is false, but only come into effect when `keep-alive-enabled` is true.\n\nEquivalent to the SO_KEEPALIVE socket option."
          }
        },
        "[method]tcp-socket.set-keep-alive-enabled": {
          "name": "[method]tcp-socket.set-keep-alive-enabled",
          "kind": {
            "method": 101
          },
          "params": [
            {
              "name": "self",
              "type": 102
            },
            {
              "name": "value",
              "type": "bool"
            }
          ],
          "results": [
            {
              "type": 104
            }
          ]
        },
        "[method]tcp-socket.keep-alive-idle-time": {
          "name": "[method]tcp-socket.keep-alive-idle-time",
          "kind": {
            "method": 101
          },
          "params": [
            {
              "name": "self",
              "type": 102
            }
          ],
          "results": [
            {
              "type": 114
            }
          ],
          "docs": {
            "contents": "Amount of time the connection has to be idle before TCP starts sending keepalive packets.\n\nIf the provided value is 0, an `invalid-argument` error is returned.\nAny other value will never cause an error, but it might be silently clamped and/or rounded.\nI.e. after setting a value, reading the same setting back may return a different value.\n\nEquivalent to the TCP_KEEPIDLE socket option. (TCP_KEEPALIVE on MacOS)\n\n# Typical errors\n- `invalid-argument`:     (set) The provided value was 0."
          }
        },
        "[method]tcp-socket.set-keep-alive-idle-time": {
          "name": "[method]tcp-socket.set-keep-alive-idle-time",
          "kind": {
            "method": 101
          },
          "params": [
            {
              "name": "self",
              "type": 102
            },
            {
              "name": "value",
              "type": 95
            }
          ],
          "results": [
            {
              "type": 104
            }
          ]
        },
        "[method]tcp-socket.keep-alive-interval": {
          "name": "[method]tcp-socket.keep-alive-interval",
          "kind": {
            "method": 101
          },
          "params": [
            {
              "name": "self",
              "type": 102
            }
          ],
          "results": [
            {
              "type": 114
            }
          ],
          "docs": {
            "contents": "The time between keepalive packets.\n\nIf the provided value is 0, an `invalid-argument` error is returned.\nAny other value will never cause an error, but it might be silently clamped and/or rounded.\nI.e. after setting a value, reading the same setting back may return a different value.\n\nEquivalent to the TCP_KEEPINTVL socket option.\n\n# Typical errors\n- `invalid-argument`:     (set) The provided value was 0."
          }
        },
        "[method]tcp-socket.set-keep-alive-interval": {
          "name": "[method]tcp-socket.set-keep-alive-interval",
          "kind": {
            "method": 101
          },
          "params": [
            {
              "name": "self",
              "type": 102
            },
            {
              "name": "value",
              "type": 95
            }
          ],
          "results": [
            {
              "type": 104
            }
          ]
        },
        "[method]tcp-socket.keep-alive-count": {
          "name": "[method]tcp-socket.keep-alive-count",
          "kind": {
            "method": 101
          },
          "params": [
            {
              "name": "self",
              "type": 102
            }
          ],
          "results": [
            {
              "type": 115
            }
          ],
          "docs": {
            "contents": "The maximum amount of keepalive packets TCP should send before aborting the connection.\n\nIf the provided value is 0, an `invalid-argument` error is returned.\nAny other value will never cause an error, but it might be silently clamped and/or rounded.\nI.e. after setting a value, reading the same setting back may return a different value.\n\nEquivalent to the TCP_KEEPCNT socket option.\n\n# Typical errors\n- `invalid-argument`:     (set) The provided value was 0."
          }
        },
        "[method]tcp-socket.set-keep-alive-count": {
          "name": "[method]tcp-socket.set-keep-alive-count",
          "kind": {
            "method": 101
          },
          "params": [
            {
              "name": "self",
              "type": 102
            },
            {
              "name": "value",
              "type": "u32"
            }
          ],
          "results": [
            {
              "type": 104
            }
          ]
        },
        "[method]tcp-socket.hop-limit": {
          "name": "[method]tcp-socket.hop-limit",
          "kind": {
            "method": 101
          },
          "params": [
            {
              "name": "self",
              "type": 102
            }
          ],
          "results": [
            {
              "type": 116
            }
          ],
          "docs": {
            "contents": "Equivalent to the IP_TTL & IPV6_UNICAST_HOPS socket options.\n\nIf the provided value is 0, an `invalid-argument` error is returned.\n\n# Typical errors\n- `invalid-argument`:     (set) The TTL value must be 1 or higher.\n- `invalid-state`:        (set) The socket is already in the Connection state.\n- `invalid-state`:        (set) The socket is already in the Listener state."
          }
        },
        "[method]tcp-socket.set-hop-limit": {
          "name": "[method]tcp-socket.set-hop-limit",
          "kind": {
            "method": 101
          },
          "params": [
            {
              "name": "self",
              "type": 102
            },
            {
              "name": "value",
              "type": "u8"
            }
          ],
          "results": [
            {
              "type": 104
            }
          ]
        },
        "[method]tcp-socket.receive-buffer-size": {
          "name": "[method]tcp-socket.receive-buffer-size",
          "kind": {
            "method": 101
          },
          "params": [
            {
              "name": "self",
              "type": 102
            }
          ],
          "results": [
            {
              "type": 117
            }
          ],
          "docs": {
            "contents": "The kernel buffer space reserved for sends/receives on this socket.\n\nIf the provided value is 0, an `invalid-argument` error is returned.\nAny other value will never cause an error, but it might be silently clamped and/or rounded.\nI.e. after setting a value, reading the same setting back may return a different value.\n\nEquivalent to the SO_RCVBUF and SO_SNDBUF socket options.\n\n# Typical errors\n- `invalid-argument`:     (set) The provided value was 0.\n- `invalid-state`:        (set) The socket is already in the Connection state.\n- `invalid-state`:        (set) The socket is already in the Listener state."
          }
        },
        "[method]tcp-socket.set-receive-buffer-size": {
          "name": "[method]tcp-socket.set-receive-buffer-size",
          "kind": {
            "method": 101
          },
          "params": [
            {
              "name": "self",
              "type": 102
            },
            {
              "name": "value",
              "type": "u64"
            }
          ],
          "results": [
            {
              "type": 104
            }
          ]
        },
        "[method]tcp-socket.send-buffer-size": {
          "name": "[method]tcp-socket.send-buffer-size",
          "kind": {
            "method": 101
          },
          "params": [
            {
              "name": "self",
              "type": 102
            }
          ],
          "results": [
            {
              "type": 117
            }
          ]
        },
        "[method]tcp-socket.set-send-buffer-size": {
          "name": "[method]tcp-socket.set-send-buffer-size",
          "kind": {
            "method": 101
          },
          "params": [
            {
              "name": "self",
              "type": 102
            },
            {
              "name": "value",
              "type": "u64"
            }
          ],
          "results": [
            {
              "type": 104
            }
          ]
        },
        "[method]tcp-socket.subscribe": {
          "name": "[method]tcp-socket.subscribe",
          "kind": {
            "method": 101
          },
          "params": [
            {
              "name": "self",
              "type": 102
            }
          ],
          "results": [
            {
              "type": 160
            }
          ],
          "docs": {
            "contents": "Create a `pollable` which will resolve once the socket is ready for I/O.\n\nNote: this function is here for WASI Preview2 only.\nIt's planned to be removed when `future` is natively supported in Preview3."
          }
        },
        "[method]tcp-socket.shutdown": {
          "name": "[method]tcp-socket.shutdown",
          "kind": {
            "method": 101
          },
          "params": [
            {
              "name": "self",
              "type": 102
            },
            {
              "name": "shutdown-type",
              "type": 100
            }
          ],
          "results": [
            {
              "type": 104
            }
          ],
          "docs": {
            "contents": "Initiate a graceful shutdown.\n\n- receive: the socket is not expecting to receive any more data from the peer. All subsequent read\noperations on the `input-stream` associated with this socket will return an End Of Stream indication.\nAny data still in the receive queue at time of calling `shutdown` will be discarded.\n- send: the socket is not expecting to send any more data to the peer. All subsequent write\noperations on the `output-stream` associated with this socket will return an error.\n- both: same effect as receive & send combined.\n\nThe shutdown function does not close (drop) the socket.\n\n# Typical errors\n- `invalid-state`: The socket is not in the Connection state. (ENOTCONN)\n\n# References\n- <https://pubs.opengroup.org/onlinepubs/9699919799/functions/shutdown.html>\n- <https://man7.org/linux/man-pages/man2/shutdown.2.html>\n- <https://learn.microsoft.com/en-us/windows/win32/api/winsock/nf-winsock-shutdown>\n- <https://man.freebsd.org/cgi/man.cgi?query=shutdown&sektion=2>"
          }
        }
      },
      "package": 3
    },
    {
      "name": "tcp-create-socket",
      "types": {
        "network": 118,
        "error-code": 119,
        "ip-address-family": 120,
        "tcp-socket": 121
      },
      "functions": {
        "create-tcp-socket": {
          "name": "create-tcp-socket",
          "kind": "freestanding",
          "params": [
            {
              "name": "address-family",
              "type": 120
            }
          ],
          "results": [
            {
              "type": 123
            }
          ],
          "docs": {
            "contents": "Create a new TCP socket.\n\nSimilar to `socket(AF_INET or AF_INET6, SOCK_STREAM, IPPROTO_TCP)` in POSIX.\n\nThis function does not require a network capability handle. This is considered to be safe because\nat time of creation, the socket is not bound to any `network` yet. Up to the moment `bind`/`listen`/`connect`\nis called, the socket is effectively an in-memory configuration object, unable to communicate with the outside world.\n\nAll sockets are non-blocking. Use the wasi-poll interface to block on asynchronous operations.\n\n# Typical errors\n- `not-supported`:     The specified `address-family` is not supported. (EAFNOSUPPORT)\n- `new-socket-limit`:  The new socket resource could not be created because of a system limit. (EMFILE, ENFILE)\n\n# References\n- <https://pubs.opengroup.org/onlinepubs/9699919799/functions/socket.html>\n- <https://man7.org/linux/man-pages/man2/socket.2.html>\n- <https://learn.microsoft.com/en-us/windows/win32/api/winsock2/nf-winsock2-wsasocketw>\n- <https://man.freebsd.org/cgi/man.cgi?query=socket&sektion=2>"
          }
        }
      },
      "package": 3
    },
    {
      "name": "udp",
      "types": {
        "pollable": 124,
        "network": 125,
        "error-code": 126,
        "ip-socket-address": 127,
        "ip-address-family": 128,
        "incoming-datagram": 130,
        "outgoing-datagram": 132,
        "udp-socket": 133,
        "incoming-datagram-stream": 134,
        "outgoing-datagram-stream": 135
      },
      "functions": {
        "[method]udp-socket.start-bind": {
          "name": "[method]udp-socket.start-bind",
          "kind": {
            "method": 133
          },
          "params": [
            {
              "name": "self",
              "type": 136
            },
            {
              "name": "network",
              "type": 137
            },
            {
              "name": "local-address",
              "type": 127
            }
          ],
          "results": [
            {
              "type": 138
            }
          ],
          "docs": {
            "contents": "Bind the socket to a specific network on the provided IP address and port.\n\nIf the IP address is zero (`0.0.0.0` in IPv4, `::` in IPv6), it is left to the implementation to decide which\nnetwork interface(s) to bind to.\nIf the port is zero, the socket will be bound to a random free port.\n\nUnlike in POSIX, this function is async. This enables interactive WASI hosts to inject permission prompts.\n\n# Typical `start` errors\n- `invalid-argument`:          The `local-address` has the wrong address family. (EAFNOSUPPORT, EFAULT on Windows)\n- `invalid-state`:             The socket is already bound. (EINVAL)\n\n# Typical `finish` errors\n- `address-in-use`:            No ephemeral ports available. (EADDRINUSE, ENOBUFS on Windows)\n- `address-in-use`:            Address is already in use. (EADDRINUSE)\n- `address-not-bindable`:      `local-address` is not an address that the `network` can bind to. (EADDRNOTAVAIL)\n- `not-in-progress`:           A `bind` operation is not in progress.\n- `would-block`:               Can't finish the operation, it is still in progress. (EWOULDBLOCK, EAGAIN)\n\n# References\n- <https://pubs.opengroup.org/onlinepubs/9699919799/functions/bind.html>\n- <https://man7.org/linux/man-pages/man2/bind.2.html>\n- <https://learn.microsoft.com/en-us/windows/win32/api/winsock/nf-winsock-bind>\n- <https://man.freebsd.org/cgi/man.cgi?query=bind&sektion=2&format=html>"
          }
        },
        "[method]udp-socket.finish-bind": {
          "name": "[method]udp-socket.finish-bind",
          "kind": {
            "method": 133
          },
          "params": [
            {
              "name": "self",
              "type": 136
            }
          ],
          "results": [
            {
              "type": 138
            }
          ]
        },
        "[method]udp-socket.stream": {
          "name": "[method]udp-socket.stream",
          "kind": {
            "method": 133
          },
          "params": [
            {
              "name": "self",
              "type": 136
            },
            {
              "name": "remote-address",
              "type": 131
            }
          ],
          "results": [
            {
              "type": 142
            }
          ],
          "docs": {
            "contents": "Set up inbound & outbound communication channels, optionally to a specific peer.\n\nThis function only changes the local socket configuration and does not generate any network traffic.\nOn success, the `remote-address` of the socket is updated. The `local-address` may be updated as well,\nbased on the best network path to `remote-address`.\n\nWhen a `remote-address` is provided, the returned streams are limited to communicating with that specific peer:\n- `send` can only be used to send to this destination.\n- `receive` will only return datagrams sent from the provided `remote-address`.\n\nThis method may be called multiple times on the same socket to change its association, but\nonly the most recently returned pair of streams will be operational. Implementations may trap if\nthe streams returned by a previous invocation haven't been dropped yet before calling `stream` again.\n\nThe POSIX equivalent in pseudo-code is:\n```text\nif (was previously connected) {\nconnect(s, AF_UNSPEC)\n}\nif (remote_address is Some) {\nconnect(s, remote_address)\n}\n```\n\nUnlike in POSIX, the socket must already be explicitly bound.\n\n# Typical errors\n- `invalid-argument`:          The `remote-address` has the wrong address family. (EAFNOSUPPORT)\n- `invalid-argument`:          `remote-address` is a non-IPv4-mapped IPv6 address, but the socket was bound to a specific IPv4-mapped IPv6 address. (or vice versa)\n- `invalid-argument`:          The IP address in `remote-address` is set to INADDR_ANY (`0.0.0.0` / `::`). (EDESTADDRREQ, EADDRNOTAVAIL)\n- `invalid-argument`:          The port in `remote-address` is set to 0. (EDESTADDRREQ, EADDRNOTAVAIL)\n- `invalid-state`:             The socket is not bound.\n- `address-in-use`:            Tried to perform an implicit bind, but there were no ephemeral ports available. (EADDRINUSE, EADDRNOTAVAIL on Linux, EAGAIN on BSD)\n- `remote-unreachable`:        The remote address is not reachable. (ECONNRESET, ENETRESET, EHOSTUNREACH, EHOSTDOWN, ENETUNREACH, ENETDOWN, ENONET)\n- `connection-refused`:        The connection was refused. (ECONNREFUSED)\n\n# References\n- <https://pubs.opengroup.org/onlinepubs/9699919799/functions/connect.html>\n- <https://man7.org/linux/man-pages/man2/connect.2.html>\n- <https://learn.microsoft.com/en-us/windows/win32/api/winsock2/nf-winsock2-connect>\n- <https://man.freebsd.org/cgi/man.cgi?connect>"
          }
        },
        "[method]udp-socket.local-address": {
          "name": "[method]udp-socket.local-address",
          "kind": {
            "method": 133
          },
          "params": [
            {
              "name": "self",
              "type": 136
            }
          ],
          "results": [
            {
              "type": 143
            }
          ],
          "docs": {
            "contents": "Get the current bound address.\n\nPOSIX mentions:\n> If the socket has not been bound to a local name, the value\n> stored in the object pointed to by `address` is unspecified.\n\nWASI is stricter and requires `local-address` to return `invalid-state` when the socket hasn't been bound yet.\n\n# Typical errors\n- `invalid-state`: The socket is not bound to any local address.\n\n# References\n- <https://pubs.opengroup.org/onlinepubs/9699919799/functions/getsockname.html>\n- <https://man7.org/linux/man-pages/man2/getsockname.2.html>\n- <https://learn.microsoft.com/en-us/windows/win32/api/winsock/nf-winsock-getsockname>\n- <https://man.freebsd.org/cgi/man.cgi?getsockname>"
          }
        },
        "[method]udp-socket.remote-address": {
          "name": "[method]udp-socket.remote-address",
          "kind": {
            "method": 133
          },
          "params": [
            {
              "name": "self",
              "type": 136
            }
          ],
          "results": [
            {
              "type": 143
            }
          ],
          "docs": {
            "contents": "Get the address the socket is currently streaming to.\n\n# Typical errors\n- `invalid-state`: The socket is not streaming to a specific remote address. (ENOTCONN)\n\n# References\n- <https://pubs.opengroup.org/onlinepubs/9699919799/functions/getpeername.html>\n- <https://man7.org/linux/man-pages/man2/getpeername.2.html>\n- <https://learn.microsoft.com/en-us/windows/win32/api/winsock/nf-winsock-getpeername>\n- <https://man.freebsd.org/cgi/man.cgi?query=getpeername&sektion=2&n=1>"
          }
        },
        "[method]udp-socket.address-family": {
          "name": "[method]udp-socket.address-family",
          "kind": {
            "method": 133
          },
          "params": [
            {
              "name": "self",
              "type": 136
            }
          ],
          "results": [
            {
              "type": 128
            }
          ],
          "docs": {
            "contents": "Whether this is a IPv4 or IPv6 socket.\n\nEquivalent to the SO_DOMAIN socket option."
          }
        },
        "[method]udp-socket.ipv6-only": {
          "name": "[method]udp-socket.ipv6-only",
          "kind": {
            "method": 133
          },
          "params": [
            {
              "name": "self",
              "type": 136
            }
          ],
          "results": [
            {
              "type": 144
            }
          ],
          "docs": {
            "contents": "Whether IPv4 compatibility (dual-stack) mode is disabled or not.\n\nEquivalent to the IPV6_V6ONLY socket option.\n\n# Typical errors\n- `not-supported`:        (get/set) `this` socket is an IPv4 socket.\n- `invalid-state`:        (set) The socket is already bound.\n- `not-supported`:        (set) Host does not support dual-stack sockets. (Implementations are not required to.)"
          }
        },
        "[method]udp-socket.set-ipv6-only": {
          "name": "[method]udp-socket.set-ipv6-only",
          "kind": {
            "method": 133
          },
          "params": [
            {
              "name": "self",
              "type": 136
            },
            {
              "name": "value",
              "type": "bool"
            }
          ],
          "results": [
            {
              "type": 138
            }
          ]
        },
        "[method]udp-socket.unicast-hop-limit": {
          "name": "[method]udp-socket.unicast-hop-limit",
          "kind": {
            "method": 133
          },
          "params": [
            {
              "name": "self",
              "type": 136
            }
          ],
          "results": [
            {
              "type": 145
            }
          ],
          "docs": {
            "contents": "Equivalent to the IP_TTL & IPV6_UNICAST_HOPS socket options.\n\nIf the provided value is 0, an `invalid-argument` error is returned.\n\n# Typical errors\n- `invalid-argument`:     (set) The TTL value must be 1 or higher."
          }
        },
        "[method]udp-socket.set-unicast-hop-limit": {
          "name": "[method]udp-socket.set-unicast-hop-limit",
          "kind": {
            "method": 133
          },
          "params": [
            {
              "name": "self",
              "type": 136
            },
            {
              "name": "value",
              "type": "u8"
            }
          ],
          "results": [
            {
              "type": 138
            }
          ]
        },
        "[method]udp-socket.receive-buffer-size": {
          "name": "[method]udp-socket.receive-buffer-size",
          "kind": {
            "method": 133
          },
          "params": [
            {
              "name": "self",
              "type": 136
            }
          ],
          "results": [
            {
              "type": 146
            }
          ],
          "docs": {
            "contents": "The kernel buffer space reserved for sends/receives on this socket.\n\nIf the provided value is 0, an `invalid-argument` error is returned.\nAny other value will never cause an error, but it might be silently clamped and/or rounded.\nI.e. after setting a value, reading the same setting back may return a different value.\n\nEquivalent to the SO_RCVBUF and SO_SNDBUF socket options.\n\n# Typical errors\n- `invalid-argument`:     (set) The provided value was 0."
          }
        },
        "[method]udp-socket.set-receive-buffer-size": {
          "name": "[method]udp-socket.set-receive-buffer-size",
          "kind": {
            "method": 133
          },
          "params": [
            {
              "name": "self",
              "type": 136
            },
            {
              "name": "value",
              "type": "u64"
            }
          ],
          "results": [
            {
              "type": 138
            }
          ]
        },
        "[method]udp-socket.send-buffer-size": {
          "name": "[method]udp-socket.send-buffer-size",
          "kind": {
            "method": 133
          },
          "params": [
            {
              "name": "self",
              "type": 136
            }
          ],
          "results": [
            {
              "type": 146
            }
          ]
        },
        "[method]udp-socket.set-send-buffer-size": {
          "name": "[method]udp-socket.set-send-buffer-size",
          "kind": {
            "method": 133
          },
          "params": [
            {
              "name": "self",
              "type": 136
            },
            {
              "name": "value",
              "type": "u64"
            }
          ],
          "results": [
            {
              "type": 138
            }
          ]
        },
        "[method]udp-socket.subscribe": {
          "name": "[method]udp-socket.subscribe",
          "kind": {
            "method": 133
          },
          "params": [
            {
              "name": "self",
              "type": 136
            }
          ],
          "results": [
            {
              "type": 161
            }
          ],
          "docs": {
            "contents": "Create a `pollable` which will resolve once the socket is ready for I/O.\n\nNote: this function is here for WASI Preview2 only.\nIt's planned to be removed when `future` is natively supported in Preview3."
          }
        },
        "[method]incoming-datagram-stream.receive": {
          "name": "[method]incoming-datagram-stream.receive",
          "kind": {
            "method": 134
          },
          "params": [
            {
              "name": "self",
              "type": 147
            },
            {
              "name": "max-results",
              "type": "u64"
            }
          ],
          "results": [
            {
              "type": 149
            }
          ],
          "docs": {
            "contents": "Receive messages on the socket.\n\nThis function attempts to receive up to `max-results` datagrams on the socket without blocking.\nThe returned list may contain fewer elements than requested, but never more.\n\nThis function returns successfully with an empty list when either:\n- `max-results` is 0, or:\n- `max-results` is greater than 0, but no results are immediately available.\nThis function never returns `error(would-block)`.\n\n# Typical errors\n- `remote-unreachable`: The remote address is not reachable. (ECONNRESET, ENETRESET on Windows, EHOSTUNREACH, EHOSTDOWN, ENETUNREACH, ENETDOWN, ENONET)\n- `connection-refused`: The connection was refused. (ECONNREFUSED)\n\n# References\n- <https://pubs.opengroup.org/onlinepubs/9699919799/functions/recvfrom.html>\n- <https://pubs.opengroup.org/onlinepubs/9699919799/functions/recvmsg.html>\n- <https://man7.org/linux/man-pages/man2/recv.2.html>\n- <https://man7.org/linux/man-pages/man2/recvmmsg.2.html>\n- <https://learn.microsoft.com/en-us/windows/win32/api/winsock/nf-winsock-recv>\n- <https://learn.microsoft.com/en-us/windows/win32/api/winsock/nf-winsock-recvfrom>\n- <https://learn.microsoft.com/en-us/previous-versions/windows/desktop/legacy/ms741687(v=vs.85)>\n- <https://man.freebsd.org/cgi/man.cgi?query=recv&sektion=2>"
          }
        },
        "[method]incoming-datagram-stream.subscribe": {
          "name": "[method]incoming-datagram-stream.subscribe",
          "kind": {
            "method": 134
          },
          "params": [
            {
              "name": "self",
              "type": 147
            }
          ],
          "results": [
            {
              "type": 161
            }
          ],
          "docs": {
            "contents": "Create a `pollable` which will resolve once the stream is ready to receive again.\n\nNote: this function is here for WASI Preview2 only.\nIt's planned to be removed when `future` is natively supported in Preview3."
          }
        },
        "[method]outgoing-datagram-stream.check-send": {
          "name": "[method]outgoing-datagram-stream.check-send",
          "kind": {
            "method": 135
          },
          "params": [
            {
              "name": "self",
              "type": 150
            }
          ],
          "results": [
            {
              "type": 146
            }
          ],
          "docs": {
            "contents": "Check readiness for sending. This function never blocks.\n\nReturns the number of datagrams permitted for the next call to `send`,\nor an error. Calling `send` with more datagrams than this function has\npermitted will trap.\n\nWhen this function returns ok(0), the `subscribe` pollable will\nbecome ready when this function will report at least ok(1), or an\nerror.\n\nNever returns `would-block`."
          }
        },
        "[method]outgoing-datagram-stream.send": {
          "name": "[method]outgoing-datagram-stream.send",
          "kind": {
            "method": 135
          },
          "params": [
            {
              "name": "self",
              "type": 150
            },
            {
              "name": "datagrams",
              "type": 151
            }
          ],
          "results": [
            {
              "type": 146
            }
          ],
          "docs": {
            "contents": "Send messages on the socket.\n\nThis function attempts to send all provided `datagrams` on the socket without blocking and\nreturns how many messages were actually sent (or queued for sending). This function never\nreturns `error(would-block)`. If none of the datagrams were able to be sent, `ok(0)` is returned.\n\nThis function semantically behaves the same as iterating the `datagrams` list and sequentially\nsending each individual datagram until either the end of the list has been reached or the first error occurred.\nIf at least one datagram has been sent successfully, this function never returns an error.\n\nIf the input list is empty, the function returns `ok(0)`.\n\nEach call to `send` must be permitted by a preceding `check-send`. Implementations must trap if\neither `check-send` was not called or `datagrams` contains more items than `check-send` permitted.\n\n# Typical errors\n- `invalid-argument`:        The `remote-address` has the wrong address family. (EAFNOSUPPORT)\n- `invalid-argument`:        `remote-address` is a non-IPv4-mapped IPv6 address, but the socket was bound to a specific IPv4-mapped IPv6 address. (or vice versa)\n- `invalid-argument`:        The IP address in `remote-address` is set to INADDR_ANY (`0.0.0.0` / `::`). (EDESTADDRREQ, EADDRNOTAVAIL)\n- `invalid-argument`:        The port in `remote-address` is set to 0. (EDESTADDRREQ, EADDRNOTAVAIL)\n- `invalid-argument`:        The socket is in \"connected\" mode and `remote-address` is `some` value that does not match the address passed to `stream`. (EISCONN)\n- `invalid-argument`:        The socket is not \"connected\" and no value for `remote-address` was provided. (EDESTADDRREQ)\n- `remote-unreachable`:      The remote address is not reachable. (ECONNRESET, ENETRESET on Windows, EHOSTUNREACH, EHOSTDOWN, ENETUNREACH, ENETDOWN, ENONET)\n- `connection-refused`:      The connection was refused. (ECONNREFUSED)\n- `datagram-too-large`:      The datagram is too large. (EMSGSIZE)\n\n# References\n- <https://pubs.opengroup.org/onlinepubs/9699919799/functions/sendto.html>\n- <https://pubs.opengroup.org/onlinepubs/9699919799/functions/sendmsg.html>\n- <https://man7.org/linux/man-pages/man2/send.2.html>\n- <https://man7.org/linux/man-pages/man2/sendmmsg.2.html>\n- <https://learn.microsoft.com/en-us/windows/win32/api/winsock2/nf-winsock2-send>\n- <https://learn.microsoft.com/en-us/windows/win32/api/winsock2/nf-winsock2-sendto>\n- <https://learn.microsoft.com/en-us/windows/win32/api/winsock2/nf-winsock2-wsasendmsg>\n- <https://man.freebsd.org/cgi/man.cgi?query=send&sektion=2>"
          }
        },
        "[method]outgoing-datagram-stream.subscribe": {
          "name": "[method]outgoing-datagram-stream.subscribe",
          "kind": {
            "method": 135
          },
          "params": [
            {
              "name": "self",
              "type": 150
            }
          ],
          "results": [
            {
              "type": 161
            }
          ],
          "docs": {
            "contents": "Create a `pollable` which will resolve once the stream is ready to send again.\n\nNote: this function is here for WASI Preview2 only.\nIt's planned to be removed when `future` is natively supported in Preview3."
          }
        }
      },
      "package": 3
    },
    {
      "name": "udp-create-socket",
      "types": {
        "network": 152,
        "error-code": 153,
        "ip-address-family": 154,
        "udp-socket": 155
      },
      "functions": {
        "create-udp-socket": {
          "name": "create-udp-socket",
          "kind": "freestanding",
          "params": [
            {
              "name": "address-family",
              "type": 154
            }
          ],
          "results": [
            {
              "type": 157
            }
          ],
          "docs": {
            "contents": "Create a new UDP socket.\n\nSimilar to `socket(AF_INET or AF_INET6, SOCK_DGRAM, IPPROTO_UDP)` in POSIX.\n\nThis function does not require a network capability handle. This is considered to be safe because\nat time of creation, the socket is not bound to any `network` yet. Up to the moment `bind` is called,\nthe socket is effectively an in-memory configuration object, unable to communicate with the outside world.\n\nAll sockets are non-blocking. Use the wasi-poll interface to block on asynchronous operations.\n\n# Typical errors\n- `not-supported`:     The specified `address-family` is not supported. (EAFNOSUPPORT)\n- `new-socket-limit`:  The new socket resource could not be created because of a system limit. (EMFILE, ENFILE)\n\n# References:\n- <https://pubs.opengroup.org/onlinepubs/9699919799/functions/socket.html>\n- <https://man7.org/linux/man-pages/man2/socket.2.html>\n- <https://learn.microsoft.com/en-us/windows/win32/api/winsock2/nf-winsock2-wsasocketw>\n- <https://man.freebsd.org/cgi/man.cgi?query=socket&sektion=2>"
          }
        }
      },
      "package": 3
    },
    {
      "name": "insecure-seed",
      "types": {},
      "functions": {
        "insecure-seed": {
          "name": "insecure-seed",
          "kind": "freestanding",
          "params": [],
          "results": [
            {
              "type": 162
            }
          ],
          "docs": {
            "contents": "Return a 128-bit value that may contain a pseudo-random value.\n\nThe returned value is not required to be computed from a CSPRNG, and may\neven be entirely deterministic. Host implementations are encouraged to\nprovide pseudo-random values to any program exposed to\nattacker-controlled content, to enable DoS protection built into many\nlanguages' hash-map implementations.\n\nThis function is intended to only be called once, by a source language\nto initialize Denial Of Service (DoS) protection in its hash-map\nimplementation.\n\n# Expected future evolution\n\nThis will likely be changed to a value import, to prevent it from being\ncalled multiple times and potentially used for purposes other than DoS\nprotection."
          }
        }
      },
      "docs": {
        "contents": "The insecure-seed interface for seeding hash-map DoS resistance.\n\nIt is intended to be portable at least between Unix-family platforms and\nWindows."
      },
      "package": 4
    },
    {
      "name": "insecure",
      "types": {},
      "functions": {
        "get-insecure-random-bytes": {
          "name": "get-insecure-random-bytes",
          "kind": "freestanding",
          "params": [
            {
              "name": "len",
              "type": "u64"
            }
          ],
          "results": [
            {
              "type": 163
            }
          ],
          "docs": {
            "contents": "Return `len` insecure pseudo-random bytes.\n\nThis function is not cryptographically secure. Do not use it for\nanything related to security.\n\nThere are no requirements on the values of the returned bytes, however\nimplementations are encouraged to return evenly distributed values with\na long period."
          }
        },
        "get-insecure-random-u64": {
          "name": "get-insecure-random-u64",
          "kind": "freestanding",
          "params": [],
          "results": [
            {
              "type": "u64"
            }
          ],
          "docs": {
            "contents": "Return an insecure pseudo-random `u64` value.\n\nThis function returns the same type of pseudo-random data as\n`get-insecure-random-bytes`, represented as a `u64`."
          }
        }
      },
      "docs": {
        "contents": "The insecure interface for insecure pseudo-random numbers.\n\nIt is intended to be portable at least between Unix-family platforms and\nWindows."
      },
      "package": 4
    },
    {
      "name": "random",
      "types": {},
      "functions": {
        "get-random-bytes": {
          "name": "get-random-bytes",
          "kind": "freestanding",
          "params": [
            {
              "name": "len",
              "type": "u64"
            }
          ],
          "results": [
            {
              "type": 163
            }
          ],
          "docs": {
            "contents": "Return `len` cryptographically-secure random or pseudo-random bytes.\n\nThis function must produce data at least as cryptographically secure and\nfast as an adequately seeded cryptographically-secure pseudo-random\nnumber generator (CSPRNG). It must not block, from the perspective of\nthe calling program, under any circumstances, including on the first\nrequest and on requests for numbers of bytes. The returned data must\nalways be unpredictable.\n\nThis function must always return fresh data. Deterministic environments\nmust omit this function, rather than implementing it with deterministic\ndata."
          }
        },
        "get-random-u64": {
          "name": "get-random-u64",
          "kind": "freestanding",
          "params": [],
          "results": [
            {
              "type": "u64"
            }
          ],
          "docs": {
            "contents": "Return a cryptographically-secure random or pseudo-random `u64` value.\n\nThis function returns the same type of data as `get-random-bytes`,\nrepresented as a `u64`."
          }
        }
      },
      "docs": {
        "contents": "WASI Random is a random data API.\n\nIt is intended to be portable at least between Unix-family platforms and\nWindows."
      },
      "package": 4
    },
    {
      "name": "environment",
      "types": {},
      "functions": {
        "get-environment": {
          "name": "get-environment",
          "kind": "freestanding",
          "params": [],
          "results": [
            {
              "type": 165
            }
          ],
          "docs": {
            "contents": "Get the POSIX-style environment variables.\n\nEach environment variable is provided as a pair of string variable names\nand string value.\n\nMorally, these are a value import, but until value imports are available\nin the component model, this import function should return the same\nvalues each time it is called."
          }
        },
        "get-arguments": {
          "name": "get-arguments",
          "kind": "freestanding",
          "params": [],
          "results": [
            {
              "type": 166
            }
          ],
          "docs": {
            "contents": "Get the POSIX-style arguments to the program."
          }
        },
        "initial-cwd": {
          "name": "initial-cwd",
          "kind": "freestanding",
          "params": [],
          "results": [
            {
              "type": 167
            }
          ],
          "docs": {
            "contents": "Return a path that programs should use as their initial current working\ndirectory, interpreting `.` as shorthand for this."
          }
        }
      },
      "package": 5
    },
    {
      "name": "exit",
      "types": {},
      "functions": {
        "exit": {
          "name": "exit",
          "kind": "freestanding",
          "params": [
            {
              "name": "status",
              "type": 168
            }
          ],
          "results": [],
          "docs": {
            "contents": "Exit the current instance and any linked instances."
          }
        }
      },
      "package": 5
    },
    {
      "name": "run",
      "types": {},
      "functions": {
        "run": {
          "name": "run",
          "kind": "freestanding",
          "params": [],
          "results": [
            {
              "type": 168
            }
          ],
          "docs": {
            "contents": "Run the program."
          }
        }
      },
      "package": 5
    },
    {
      "name": "stdin",
      "types": {
        "input-stream": 169
      },
      "functions": {
        "get-stdin": {
          "name": "get-stdin",
          "kind": "freestanding",
          "params": [],
          "results": [
            {
              "type": 183
            }
          ]
        }
      },
      "package": 5
    },
    {
      "name": "stdout",
      "types": {
        "output-stream": 170
      },
      "functions": {
        "get-stdout": {
          "name": "get-stdout",
          "kind": "freestanding",
          "params": [],
          "results": [
            {
              "type": 184
            }
          ]
        }
      },
      "package": 5
    },
    {
      "name": "stderr",
      "types": {
        "output-stream": 171
      },
      "functions": {
        "get-stderr": {
          "name": "get-stderr",
          "kind": "freestanding",
          "params": [],
          "results": [
            {
              "type": 185
            }
          ]
        }
      },
      "package": 5
    },
    {
      "name": "terminal-input",
      "types": {
        "terminal-input": 172
      },
      "functions": {},
      "package": 5
    },
    {
      "name": "terminal-output",
      "types": {
        "terminal-output": 173
      },
      "functions": {},
      "package": 5
    },
    {
      "name": "terminal-stdin",
      "types": {
        "terminal-input": 174
      },
      "functions": {
        "get-terminal-stdin": {
          "name": "get-terminal-stdin",
          "kind": "freestanding",
          "params": [],
          "results": [
            {
              "type": 176
            }
          ],
          "docs": {
            "contents": "If stdin is connected to a terminal, return a `terminal-input` handle\nallowing further interaction with it."
          }
        }
      },
      "docs": {
        "contents": "An interface providing an optional `terminal-input` for stdin as a\nlink-time authority."
      },
      "package": 5
    },
    {
      "name": "terminal-stdout",
      "types": {
        "terminal-output": 177
      },
      "functions": {
        "get-terminal-stdout": {
          "name": "get-terminal-stdout",
          "kind": "freestanding",
          "params": [],
          "results": [
            {
              "type": 179
            }
          ],
          "docs": {
            "contents": "If stdout is connected to a terminal, return a `terminal-output` handle\nallowing further interaction with it."
          }
        }
      },
      "docs": {
        "contents": "An interface providing an optional `terminal-output` for stdout as a\nlink-time authority."
      },
      "package": 5
    },
    {
      "name": "terminal-stderr",
      "types": {
        "terminal-output": 180
      },
      "functions": {
        "get-terminal-stderr": {
          "name": "get-terminal-stderr",
          "kind": "freestanding",
          "params": [],
          "results": [
            {
              "type": 182
            }
          ],
          "docs": {
            "contents": "If stderr is connected to a terminal, return a `terminal-output` handle\nallowing further interaction with it."
          }
        }
      },
      "docs": {
        "contents": "An interface providing an optional `terminal-output` for stderr as a\nlink-time authority."
      },
      "package": 5
    },
    {
      "name": "types",
      "types": {
        "duration": 186,
        "input-stream": 187,
        "output-stream": 188,
        "stream-error": 189,
        "pollable": 190,
        "method": 191,
        "scheme": 192,
        "DNS-error-payload": 195,
        "TLS-alert-received-payload": 197,
        "field-size-payload": 199,
        "error-code": 202,
        "header-error": 203,
        "field-key": 204,
        "field-value": 205,
        "fields": 206,
        "headers": 207,
        "trailers": 208,
        "incoming-request": 209,
        "outgoing-request": 210,
        "request-options": 211,
        "response-outparam": 212,
        "status-code": 213,
        "incoming-response": 214,
        "incoming-body": 215,
        "future-trailers": 216,
        "outgoing-response": 217,
        "outgoing-body": 218,
        "future-incoming-response": 219
      },
      "functions": {
        "http-error-code": {
          "name": "http-error-code",
          "kind": "freestanding",
          "params": [
            {
              "name": "err",
              "type": 220
            }
          ],
          "results": [
            {
              "type": 221
            }
          ],
          "docs": {
            "contents": "Attempts to extract a http-related `error` from the stream `error`\nprovided.\n\nStream operations which return `stream-error::last-operation-failed` have\na payload with more information about the operation that failed. This\npayload can be passed through to this function to see if there's\nhttp-related information about the error to return.\n\nNote that this function is fallible because not all stream-related errors\nare http-related errors."
          }
        },
        "[constructor]fields": {
          "name": "[constructor]fields",
          "kind": {
            "constructor": 206
          },
          "params": [],
          "results": [
            {
              "type": 224
            }
          ],
          "docs": {
            "contents": "Construct an empty HTTP Fields."
          }
        },
        "[static]fields.from-list": {
          "name": "[static]fields.from-list",
          "kind": {
            "static": 206
          },
          "params": [
            {
              "name": "entries",
              "type": 223
            }
          ],
          "results": [
            {
              "type": 225
            }
          ],
          "docs": {
            "contents": "Construct an HTTP Fields.\n\nThe list represents each key-value pair in the Fields. Keys\nwhich have multiple values are represented by multiple entries in this\nlist with the same key.\n\nThe tuple is a pair of the field key, represented as a string, and\nValue, represented as a list of bytes. In a valid Fields, all keys\nand values are valid UTF-8 strings. However, values are not always\nwell-formed, so they are represented as a raw list of bytes.\n\nAn error result will be returned if any header or value was\nsyntactically invalid, or if a header was forbidden."
          }
        },
        "[method]fields.get": {
          "name": "[method]fields.get",
          "kind": {
            "method": 206
          },
          "params": [
            {
              "name": "self",
              "type": 226
            },
            {
              "name": "name",
              "type": 204
            }
          ],
          "results": [
            {
              "type": 227
            }
          ],
          "docs": {
            "contents": "Get all of the values corresponding to a key."
          }
        },
        "[method]fields.set": {
          "name": "[method]fields.set",
          "kind": {
            "method": 206
          },
          "params": [
            {
              "name": "self",
              "type": 226
            },
            {
              "name": "name",
              "type": 204
            },
            {
              "name": "value",
              "type": 227
            }
          ],
          "results": [
            {
              "type": 228
            }
          ],
          "docs": {
            "contents": "Set all of the values for a key. Clears any existing values for that\nkey, if they have been set."
          }
        },
        "[method]fields.delete": {
          "name": "[method]fields.delete",
          "kind": {
            "method": 206
          },
          "params": [
            {
              "name": "self",
              "type": 226
            },
            {
              "name": "name",
              "type": 204
            }
          ],
          "results": [
            {
              "type": 228
            }
          ],
          "docs": {
            "contents": "Delete all values for a key. Does nothing if no values for the key\nexist."
          }
        },
        "[method]fields.append": {
          "name": "[method]fields.append",
          "kind": {
            "method": 206
          },
          "params": [
            {
              "name": "self",
              "type": 226
            },
            {
              "name": "name",
              "type": 204
            },
            {
              "name": "value",
              "type": 205
            }
          ],
          "results": [
            {
              "type": 228
            }
          ],
          "docs": {
            "contents": "Append a value for a key. Does not change or delete any existing\nvalues for that key."
          }
        },
        "[method]fields.entries": {
          "name": "[method]fields.entries",
          "kind": {
            "method": 206
          },
          "params": [
            {
              "name": "self",
              "type": 226
            }
          ],
          "results": [
            {
              "type": 223
            }
          ],
          "docs": {
            "contents": "Retrieve the full set of keys and values in the Fields. Like the\nconstructor, the list represents each key-value pair.\n\nThe outer list represents each key-value pair in the Fields. Keys\nwhich have multiple values are represented by multiple entries in this\nlist with the same key."
          }
        },
        "[method]fields.clone": {
          "name": "[method]fields.clone",
          "kind": {
            "method": 206
          },
          "params": [
            {
              "name": "self",
              "type": 226
            }
          ],
          "results": [
            {
              "type": 224
            }
          ],
          "docs": {
            "contents": "Make a deep copy of the Fields. Equivelant in behavior to calling the\n`fields` constructor on the return value of `entries`"
          }
        },
        "[method]incoming-request.method": {
          "name": "[method]incoming-request.method",
          "kind": {
            "method": 209
          },
          "params": [
            {
              "name": "self",
              "type": 229
            }
          ],
          "results": [
            {
              "type": 191
            }
          ],
          "docs": {
            "contents": "Returns the method of the incoming request."
          }
        },
        "[method]incoming-request.path-with-query": {
          "name": "[method]incoming-request.path-with-query",
          "kind": {
            "method": 209
          },
          "params": [
            {
              "name": "self",
              "type": 229
            }
          ],
          "results": [
            {
              "type": 193
            }
          ],
          "docs": {
            "contents": "Returns the path with query parameters from the request, as a string."
          }
        },
        "[method]incoming-request.scheme": {
          "name": "[method]incoming-request.scheme",
          "kind": {
            "method": 209
          },
          "params": [
            {
              "name": "self",
              "type": 229
            }
          ],
          "results": [
            {
              "type": 230
            }
          ],
          "docs": {
            "contents": "Returns the protocol scheme from the request."
          }
        },
        "[method]incoming-request.authority": {
          "name": "[method]incoming-request.authority",
          "kind": {
            "method": 209
          },
          "params": [
            {
              "name": "self",
              "type": 229
            }
          ],
          "results": [
            {
              "type": 193
            }
          ],
          "docs": {
            "contents": "Returns the authority from the request, if it was present."
          }
        },
        "[method]incoming-request.headers": {
          "name": "[method]incoming-request.headers",
          "kind": {
            "method": 209
          },
          "params": [
            {
              "name": "self",
              "type": 229
            }
          ],
          "results": [
            {
              "type": 269
            }
          ],
          "docs": {
            "contents": "Returns the `headers` from the request.\n\nThe `headers` returned are a child resource: it must be dropped before\nthe parent `incoming-request` is dropped. Dropping this\n`incoming-request` before all children are dropped will trap."
          }
        },
        "[method]incoming-request.consume": {
          "name": "[method]incoming-request.consume",
          "kind": {
            "method": 209
          },
          "params": [
            {
              "name": "self",
              "type": 229
            }
          ],
          "results": [
            {
              "type": 232
            }
          ],
          "docs": {
            "contents": "Gives the `incoming-body` associated with this request. Will only\nreturn success at most once, and subsequent calls will return error."
          }
        },
        "[constructor]outgoing-request": {
          "name": "[constructor]outgoing-request",
          "kind": {
            "constructor": 210
          },
          "params": [
            {
              "name": "headers",
              "type": 269
            }
          ],
          "results": [
            {
              "type": 270
            }
          ],
          "docs": {
            "contents": "Construct a new `outgoing-request` with a default `method` of `GET`, and\n`none` values for `path-with-query`, `scheme`, and `authority`.\n\n* `headers` is the HTTP Headers for the Request.\n\nIt is possible to construct, or manipulate with the accessor functions\nbelow, an `outgoing-request` with an invalid combination of `scheme`\nand `authority`, or `headers` which are not permitted to be sent.\nIt is the obligation of the `outgoing-handler.handle` implementation\nto reject invalid constructions of `outgoing-request`."
          }
        },
        "[method]outgoing-request.body": {
          "name": "[method]outgoing-request.body",
          "kind": {
            "method": 210
          },
          "params": [
            {
              "name": "self",
              "type": 233
            }
          ],
          "results": [
            {
              "type": 235
            }
          ],
          "docs": {
            "contents": "Returns the resource corresponding to the outgoing Body for this\nRequest.\n\nReturns success on the first call: the `outgoing-body` resource for\nthis `outgoing-response` can be retrieved at most once. Subsequent\ncalls will return error."
          }
        },
        "[method]outgoing-request.method": {
          "name": "[method]outgoing-request.method",
          "kind": {
            "method": 210
          },
          "params": [
            {
              "name": "self",
              "type": 233
            }
          ],
          "results": [
            {
              "type": 191
            }
          ],
          "docs": {
            "contents": "Get the Method for the Request."
          }
        },
        "[method]outgoing-request.set-method": {
          "name": "[method]outgoing-request.set-method",
          "kind": {
            "method": 210
          },
          "params": [
            {
              "name": "self",
              "type": 233
            },
            {
              "name": "method",
              "type": 191
            }
          ],
          "results": [
            {
              "type": 236
            }
          ],
          "docs": {
            "contents": "Set the Method for the Request. Fails if the string present in a\n`method.other` argument is not a syntactically valid method."
          }
        },
        "[method]outgoing-request.path-with-query": {
          "name": "[method]outgoing-request.path-with-query",
          "kind": {
            "method": 210
          },
          "params": [
            {
              "name": "self",
              "type": 233
            }
          ],
          "results": [
            {
              "type": 193
            }
          ],
          "docs": {
            "contents": "Get the combination of the HTTP Path and Query for the Request.\nWhen `none`, this represents an empty Path and empty Query."
          }
        },
        "[method]outgoing-request.set-path-with-query": {
          "name": "[method]outgoing-request.set-path-with-query",
          "kind": {
            "method": 210
          },
          "params": [
            {
              "name": "self",
              "type": 233
            },
            {
              "name": "path-with-query",
              "type": 193
            }
          ],
          "results": [
            {
              "type": 236
            }
          ],
          "docs": {
            "contents": "Set the combination of the HTTP Path and Query for the Request.\nWhen `none`, this represents an empty Path and empty Query. Fails is the\nstring given is not a syntactically valid path and query uri component."
          }
        },
        "[method]outgoing-request.scheme": {
          "name": "[method]outgoing-request.scheme",
          "kind": {
            "method": 210
          },
          "params": [
            {
              "name": "self",
              "type": 233
            }
          ],
          "results": [
            {
              "type": 230
            }
          ],
          "docs": {
            "contents": "Get the HTTP Related Scheme for the Request. When `none`, the\nimplementation may choose an appropriate default scheme."
          }
        },
        "[method]outgoing-request.set-scheme": {
          "name": "[method]outgoing-request.set-scheme",
          "kind": {
            "method": 210
          },
          "params": [
            {
              "name": "self",
              "type": 233
            },
            {
              "name": "scheme",
              "type": 230
            }
          ],
          "results": [
            {
              "type": 236
            }
          ],
          "docs": {
            "contents": "Set the HTTP Related Scheme for the Request. When `none`, the\nimplementation may choose an appropriate default scheme. Fails if the\nstring given is not a syntactically valid uri scheme."
          }
        },
        "[method]outgoing-request.authority": {
          "name": "[method]outgoing-request.authority",
          "kind": {
            "method": 210
          },
          "params": [
            {
              "name": "self",
              "type": 233
            }
          ],
          "results": [
            {
              "type": 193
            }
          ],
          "docs": {
            "contents": "Get the HTTP Authority for the Request. A value of `none` may be used\nwith Related Schemes which do not require an Authority. The HTTP and\nHTTPS schemes always require an authority."
          }
        },
        "[method]outgoing-request.set-authority": {
          "name": "[method]outgoing-request.set-authority",
          "kind": {
            "method": 210
          },
          "params": [
            {
              "name": "self",
              "type": 233
            },
            {
              "name": "authority",
              "type": 193
            }
          ],
          "results": [
            {
              "type": 236
            }
          ],
          "docs": {
            "contents": "Set the HTTP Authority for the Request. A value of `none` may be used\nwith Related Schemes which do not require an Authority. The HTTP and\nHTTPS schemes always require an authority. Fails if the string given is\nnot a syntactically valid uri authority."
          }
        },
        "[method]outgoing-request.headers": {
          "name": "[method]outgoing-request.headers",
          "kind": {
            "method": 210
          },
          "params": [
            {
              "name": "self",
              "type": 233
            }
          ],
          "results": [
            {
              "type": 269
            }
          ],
          "docs": {
            "contents": "Get the headers associated with the Request.\n\nThis headers resource is a child: it must be dropped before the parent\n`outgoing-request` is dropped, or its ownership is transfered to\nanother component by e.g. `outgoing-handler.handle`."
          }
        },
        "[constructor]request-options": {
          "name": "[constructor]request-options",
          "kind": {
            "constructor": 211
          },
          "params": [],
          "results": [
            {
              "type": 271
            }
          ],
          "docs": {
            "contents": "Construct a default `request-options` value."
          }
        },
        "[method]request-options.connect-timeout-ms": {
          "name": "[method]request-options.connect-timeout-ms",
          "kind": {
            "method": 211
          },
          "params": [
            {
              "name": "self",
              "type": 237
            }
          ],
          "results": [
            {
              "type": 238
            }
          ],
          "docs": {
            "contents": "The timeout for the initial connect to the HTTP Server."
          }
        },
        "[method]request-options.set-connect-timeout-ms": {
          "name": "[method]request-options.set-connect-timeout-ms",
          "kind": {
            "method": 211
          },
          "params": [
            {
              "name": "self",
              "type": 237
            },
            {
              "name": "ms",
              "type": 238
            }
          ],
          "results": [
            {
              "type": 236
            }
          ],
          "docs": {
            "contents": "Set the timeout for the initial connect to the HTTP Server. An error\nreturn value indicates that this timeout is not supported."
          }
        },
        "[method]request-options.first-byte-timeout-ms": {
          "name": "[method]request-options.first-byte-timeout-ms",
          "kind": {
            "method": 211
          },
          "params": [
            {
              "name": "self",
              "type": 237
            }
          ],
          "results": [
            {
              "type": 238
            }
          ],
          "docs": {
            "contents": "The timeout for receiving the first byte of the Response body."
          }
        },
        "[method]request-options.set-first-byte-timeout-ms": {
          "name": "[method]request-options.set-first-byte-timeout-ms",
          "kind": {
            "method": 211
          },
          "params": [
            {
              "name": "self",
              "type": 237
            },
            {
              "name": "ms",
              "type": 238
            }
          ],
          "results": [
            {
              "type": 236
            }
          ],
          "docs": {
            "contents": "Set the timeout for receiving the first byte of the Response body. An\nerror return value indicates that this timeout is not supported."
          }
        },
        "[method]request-options.between-bytes-timeout-ms": {
          "name": "[method]request-options.between-bytes-timeout-ms",
          "kind": {
            "method": 211
          },
          "params": [
            {
              "name": "self",
              "type": 237
            }
          ],
          "results": [
            {
              "type": 238
            }
          ],
          "docs": {
            "contents": "The timeout for receiving subsequent chunks of bytes in the Response\nbody stream."
          }
        },
        "[method]request-options.set-between-bytes-timeout-ms": {
          "name": "[method]request-options.set-between-bytes-timeout-ms",
          "kind": {
            "method": 211
          },
          "params": [
            {
              "name": "self",
              "type": 237
            },
            {
              "name": "ms",
              "type": 238
            }
          ],
          "results": [
            {
              "type": 236
            }
          ],
          "docs": {
            "contents": "Set the timeout for receiving subsequent chunks of bytes in the Response\nbody stream. An error return value indicates that this timeout is not\nsupported."
          }
        },
        "[static]response-outparam.set": {
          "name": "[static]response-outparam.set",
          "kind": {
            "static": 212
          },
          "params": [
            {
              "name": "param",
              "type": 272
            },
            {
              "name": "response",
              "type": 240
            }
          ],
          "results": [],
          "docs": {
            "contents": "Set the value of the `response-outparam` to either send a response,\nor indicate an error.\n\nThis method consumes the `response-outparam` to ensure that it is\ncalled at most once. If it is never called, the implementation\nwill respond with an error.\n\nThe user may provide an `error` to `response` to allow the\nimplementation determine how to respond with an HTTP error response."
          }
        },
        "[method]incoming-response.status": {
          "name": "[method]incoming-response.status",
          "kind": {
            "method": 214
          },
          "params": [
            {
              "name": "self",
              "type": 241
            }
          ],
          "results": [
            {
              "type": 213
            }
          ],
          "docs": {
            "contents": "Returns the status code from the incoming response."
          }
        },
        "[method]incoming-response.headers": {
          "name": "[method]incoming-response.headers",
          "kind": {
            "method": 214
          },
          "params": [
            {
              "name": "self",
              "type": 241
            }
          ],
          "results": [
            {
              "type": 269
            }
          ],
          "docs": {
            "contents": "Returns the headers from the incoming response."
          }
        },
        "[method]incoming-response.consume": {
          "name": "[method]incoming-response.consume",
          "kind": {
            "method": 214
          },
          "params": [
            {
              "name": "self",
              "type": 241
            }
          ],
          "results": [
            {
              "type": 232
            }
          ],
          "docs": {
            "contents": "Returns the incoming body. May be called at most once. Returns error\nif called additional times."
          }
        },
        "[method]incoming-body.stream": {
          "name": "[method]incoming-body.stream",
          "kind": {
            "method": 215
          },
          "params": [
            {
              "name": "self",
              "type": 242
            }
          ],
          "results": [
            {
              "type": 244
            }
          ],
          "docs": {
            "contents": "Returns the contents of the body, as a stream of bytes.\n\nReturns success on first call: the stream representing the contents\ncan be retrieved at most once. Subsequent calls will return error.\n\nThe returned `input-stream` resource is a child: it must be dropped\nbefore the parent `incoming-body` is dropped, or consumed by\n`incoming-body.finish`.\n\nThis invariant ensures that the implementation can determine whether\nthe user is consuming the contents of the body, waiting on the\n`future-trailers` to be ready, or neither. This allows for network\nbackpressure is to be applied when the user is consuming the body,\nand for that backpressure to not inhibit delivery of the trailers if\nthe user does not read the entire body."
          }
        },
        "[static]incoming-body.finish": {
          "name": "[static]incoming-body.finish",
          "kind": {
            "static": 215
          },
          "params": [
            {
              "name": "this",
              "type": 231
            }
          ],
          "results": [
            {
              "type": 273
            }
          ],
          "docs": {
            "contents": "Takes ownership of `incoming-body`, and returns a `future-trailers`.\nThis function will trap if the `input-stream` child is still alive."
          }
        },
        "[method]future-trailers.subscribe": {
          "name": "[method]future-trailers.subscribe",
          "kind": {
            "method": 216
          },
          "params": [
            {
              "name": "self",
              "type": 245
            }
          ],
          "results": [
            {
              "type": 274
            }
          ],
          "docs": {
            "contents": "Returns a pollable which becomes ready when either the trailers have\nbeen received, or an error has occured. When this pollable is ready,\nthe `get` method will return `some`."
          }
        },
        "[method]future-trailers.get": {
          "name": "[method]future-trailers.get",
          "kind": {
            "method": 216
          },
          "params": [
            {
              "name": "self",
              "type": 245
            }
          ],
          "results": [
            {
              "type": 249
            }
          ],
          "docs": {
            "contents": "Returns the contents of the trailers, or an error which occured,\nonce the future is ready.\n\nThe outer `option` represents future readiness. Users can wait on this\n`option` to become `some` using the `subscribe` method.\n\nThe `result` represents that either the HTTP Request or Response body,\nas well as any trailers, were received successfully, or that an error\noccured receiving them. The optional `trailers` indicates whether or not\ntrailers were present in the body."
          }
        },
        "[constructor]outgoing-response": {
          "name": "[constructor]outgoing-response",
          "kind": {
            "constructor": 217
          },
          "params": [
            {
              "name": "headers",
              "type": 269
            }
          ],
          "results": [
            {
              "type": 239
            }
          ],
          "docs": {
            "contents": "Construct an `outgoing-response`, with a default `status-code` of `200`.\nIf a different `status-code` is needed, it must be set via the\n`set-status-code` method.\n\n* `headers` is the HTTP Headers for the Response."
          }
        },
        "[method]outgoing-response.status-code": {
          "name": "[method]outgoing-response.status-code",
          "kind": {
            "method": 217
          },
          "params": [
            {
              "name": "self",
              "type": 250
            }
          ],
          "results": [
            {
              "type": 213
            }
          ],
          "docs": {
            "contents": "Get the HTTP Status Code for the Response."
          }
        },
        "[method]outgoing-response.set-status-code": {
          "name": "[method]outgoing-response.set-status-code",
          "kind": {
            "method": 217
          },
          "params": [
            {
              "name": "self",
              "type": 250
            },
            {
              "name": "status-code",
              "type": 213
            }
          ],
          "results": [
            {
              "type": 236
            }
          ],
          "docs": {
            "contents": "Set the HTTP Status Code for the Response. Fails if the status-code\ngiven is not a valid http status code."
          }
        },
        "[method]outgoing-response.headers": {
          "name": "[method]outgoing-response.headers",
          "kind": {
            "method": 217
          },
          "params": [
            {
              "name": "self",
              "type": 250
            }
          ],
          "results": [
            {
              "type": 269
            }
          ],
          "docs": {
            "contents": "Get the headers associated with the Request.\n\nThis headers resource is a child: it must be dropped before the parent\n`outgoing-request` is dropped, or its ownership is transfered to\nanother component by e.g. `outgoing-handler.handle`."
          }
        },
        "[method]outgoing-response.body": {
          "name": "[method]outgoing-response.body",
          "kind": {
            "method": 217
          },
          "params": [
            {
              "name": "self",
              "type": 250
            }
          ],
          "results": [
            {
              "type": 235
            }
          ],
          "docs": {
            "contents": "Returns the resource corresponding to the outgoing Body for this Response.\n\nReturns success on the first call: the `outgoing-body` resource for\nthis `outgoing-response` can be retrieved at most once. Subsequent\ncalls will return error."
          }
        },
        "[method]outgoing-body.write": {
          "name": "[method]outgoing-body.write",
          "kind": {
            "method": 218
          },
          "params": [
            {
              "name": "self",
              "type": 251
            }
          ],
          "results": [
            {
              "type": 253
            }
          ],
          "docs": {
            "contents": "Returns a stream for writing the body contents.\n\nThe returned `output-stream` is a child resource: it must be dropped\nbefore the parent `outgoing-body` resource is dropped (or finished),\notherwise the `outgoing-body` drop or `finish` will trap.\n\nReturns success on the first call: the `output-stream` resource for\nthis `outgoing-body` may be retrieved at most once. Subsequent calls\nwill return error."
          }
        },
        "[static]outgoing-body.finish": {
          "name": "[static]outgoing-body.finish",
          "kind": {
            "static": 218
          },
          "params": [
            {
              "name": "this",
              "type": 234
            },
            {
              "name": "trailers",
              "type": 247
            }
          ],
          "results": [],
          "docs": {
            "contents": "Finalize an outgoing body, optionally providing trailers. This must be\ncalled to signal that the response is complete. If the `outgoing-body`\nis dropped without calling `outgoing-body.finalize`, the implementation\nshould treat the body as corrupted."
          }
        },
        "[method]future-incoming-response.subscribe": {
          "name": "[method]future-incoming-response.subscribe",
          "kind": {
            "method": 219
          },
          "params": [
            {
              "name": "self",
              "type": 254
            }
          ],
          "results": [
            {
              "type": 274
            }
          ],
          "docs": {
            "contents": "Returns a pollable which becomes ready when either the Response has\nbeen received, or an error has occured. When this pollable is ready,\nthe `get` method will return `some`."
          }
        },
        "[method]future-incoming-response.get": {
          "name": "[method]future-incoming-response.get",
          "kind": {
            "method": 219
          },
          "params": [
            {
              "name": "self",
              "type": 254
            }
          ],
          "results": [
            {
              "type": 258
            }
          ],
          "docs": {
            "contents": "Returns the incoming HTTP Response, or an error, once one is ready.\n\nThe outer `option` represents future readiness. Users can wait on this\n`option` to become `some` using the `subscribe` method.\n\nThe outer `result` is used to retrieve the response or error at most\nonce. It will be success on the first call in which the outer option\nis `some`, and error on subsequent calls.\n\nThe inner `result` represents that either the incoming HTTP Response\nstatus and headers have recieved successfully, or that an error\noccured. Errors may also occur while consuming the response body,\nbut those will be reported by the `incoming-body` and its\n`output-stream` child."
          }
        }
      },
      "docs": {
        "contents": "This interface defines all of the types and methods for implementing\nHTTP Requests and Responses, both incoming and outgoing, as well as\ntheir headers, trailers, and bodies."
      },
      "package": 6
    },
    {
      "name": "incoming-handler",
      "types": {
        "incoming-request": 259,
        "response-outparam": 260
      },
      "functions": {
        "handle": {
          "name": "handle",
          "kind": "freestanding",
          "params": [
            {
              "name": "request",
              "type": 275
            },
            {
              "name": "response-out",
              "type": 276
            }
          ],
          "results": [],
          "docs": {
            "contents": "This function is invoked with an incoming HTTP Request, and a resource\n`response-outparam` which provides the capability to reply with an HTTP\nResponse. The response is sent by calling the `response-outparam.set`\nmethod, which allows execution to continue after the response has been\nsent. This enables both streaming to the response body, and performing other\nwork.\n\nThe implementor of this function must write a response to the\n`response-outparam` before returning, or else the caller will respond\nwith an error on its behalf."
          }
        }
      },
      "docs": {
        "contents": "This interface defines a handler of incoming HTTP Requests. It should\nbe exported by components which can respond to HTTP Requests."
      },
      "package": 6
    },
    {
      "name": "outgoing-handler",
      "types": {
        "outgoing-request": 261,
        "request-options": 262,
        "future-incoming-response": 263,
        "error-code": 264
      },
      "functions": {
        "handle": {
          "name": "handle",
          "kind": "freestanding",
          "params": [
            {
              "name": "request",
              "type": 277
            },
            {
              "name": "options",
              "type": 266
            }
          ],
          "results": [
            {
              "type": 268
            }
          ],
          "docs": {
            "contents": "This function is invoked with an outgoing HTTP Request, and it returns\na resource `future-incoming-response` which represents an HTTP Response\nwhich may arrive in the future.\n\nThe `options` argument accepts optional parameters for the HTTP\nprotocol's transport layer.\n\nThis function may return an error if the `outgoing-request` is invalid\nor not allowed to be made. Otherwise, protocol errors are reported\nthrough the `future-incoming-response`."
          }
        }
      },
      "docs": {
        "contents": "This interface defines a handler of outgoing HTTP Requests. It should be\nimported by components which wish to make HTTP Requests."
      },
      "package": 6
    }
  ],
  "types": [
    {
      "name": "error",
      "kind": "resource",
      "owner": {
        "interface": 0
      },
      "docs": {
        "contents": "A resource which represents some error information.\n\nThe only method provided by this resource is `to-debug-string`,\nwhich provides some human-readable information about the error.\n\nIn the `wasi:io` package, this resource is returned through the\n`wasi:io/streams/stream-error` type.\n\nTo provide more specific error information, other interfaces may\nprovide functions to further \"downcast\" this error into more specific\nerror information. For example, `error`s returned in streams derived\nfrom filesystem types to be described using the filesystem's own\nerror-code type, using the function\n`wasi:filesystem/types/filesystem-error-code`, which takes a parameter\n`borrow<error>` and returns\n`option<wasi:filesystem/types/error-code>`.\n\nThe set of functions which can \"downcast\" an `error` into a more\nconcrete type is open."
      }
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "borrow": 0
        }
      },
      "owner": null
    },
    {
      "name": "pollable",
      "kind": "resource",
      "owner": {
        "interface": 1
      },
      "docs": {
        "contents": "`pollable` epresents a single I/O event which may be ready, or not."
      }
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "borrow": 2
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "list": 3
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "list": "u32"
      },
      "owner": null
    },
    {
      "name": "error",
      "kind": {
        "type": 0
      },
      "owner": {
        "interface": 2
      }
    },
    {
      "name": "pollable",
      "kind": {
        "type": 2
      },
      "owner": {
        "interface": 2
      }
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "own": 6
        }
      },
      "owner": null
    },
    {
      "name": "stream-error",
      "kind": {
        "variant": {
          "cases": [
            {
              "name": "last-operation-failed",
              "type": 8,
              "docs": {
                "contents": "The last operation (a write or flush) failed before completion.\n\nMore information is available in the `error` payload."
              }
            },
            {
              "name": "closed",
              "type": null,
              "docs": {
                "contents": "The stream is closed: no more input will be accepted by the\nstream. A closed output-stream will return this error on all\nfuture operations."
              }
            }
          ]
        }
      },
      "owner": {
        "interface": 2
      },
      "docs": {
        "contents": "An error for input-stream and output-stream operations."
      }
    },
    {
      "name": "input-stream",
      "kind": "resource",
      "owner": {
        "interface": 2
      },
      "docs": {
        "contents": "An input bytestream.\n\n`input-stream`s are *non-blocking* to the extent practical on underlying\nplatforms. I/O operations always return promptly; if fewer bytes are\npromptly available than requested, they return the number of bytes promptly\navailable, which could even be zero. To wait for data to be available,\nuse the `subscribe` function to obtain a `pollable` which can be polled\nfor using `wasi:io/poll`."
      }
    },
    {
      "name": "output-stream",
      "kind": "resource",
      "owner": {
        "interface": 2
      },
      "docs": {
        "contents": "An output bytestream.\n\n`output-stream`s are *non-blocking* to the extent practical on\nunderlying platforms. Except where specified otherwise, I/O operations also\nalways return promptly, after the number of bytes that can be written\npromptly, which could even be zero. To wait for the stream to be ready to\naccept data, the `subscribe` function to obtain a `pollable` which can be\npolled for using `wasi:io/poll`."
      }
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "borrow": 10
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "list": "u8"
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "result": {
          "ok": 13,
          "err": 9
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "result": {
          "ok": "u64",
          "err": 9
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "borrow": 11
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "result": {
          "ok": null,
          "err": 9
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "own": 7
        }
      },
      "owner": null
    },
    {
      "name": "pollable",
      "kind": {
        "type": 2
      },
      "owner": {
        "interface": 3
      }
    },
    {
      "name": "instant",
      "kind": {
        "type": "u64"
      },
      "owner": {
        "interface": 3
      },
      "docs": {
        "contents": "An instant in time, in nanoseconds. An instant is relative to an\nunspecified initial value, and can only be compared to instances from\nthe same monotonic-clock."
      }
    },
    {
      "name": "duration",
      "kind": {
        "type": "u64"
      },
      "owner": {
        "interface": 3
      },
      "docs": {
        "contents": "A duration of time, in nanoseconds."
      }
    },
    {
      "name": "datetime",
      "kind": {
        "record": {
          "fields": [
            {
              "name": "seconds",
              "type": "u64"
            },
            {
              "name": "nanoseconds",
              "type": "u32"
            }
          ]
        }
      },
      "owner": {
        "interface": 4
      },
      "docs": {
        "contents": "A time and date in seconds plus nanoseconds."
      }
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "own": 19
        }
      },
      "owner": null
    },
    {
      "name": "input-stream",
      "kind": {
        "type": 10
      },
      "owner": {
        "interface": 5
      }
    },
    {
      "name": "output-stream",
      "kind": {
        "type": 11
      },
      "owner": {
        "interface": 5
      }
    },
    {
      "name": "error",
      "kind": {
        "type": 6
      },
      "owner": {
        "interface": 5
      }
    },
    {
      "name": "datetime",
      "kind": {
        "type": 22
      },
      "owner": {
        "interface": 5
      }
    },
    {
      "name": "filesize",
      "kind": {
        "type": "u64"
      },
      "owner": {
        "interface": 5
      },
      "docs": {
        "contents": "File size or length of a region within a file."
      }
    },
    {
      "name": "descriptor-type",
      "kind": {
        "enum": {
          "cases": [
            {
              "name": "unknown",
              "docs": {
                "contents": "The type of the descriptor or file is unknown or is different from\nany of the other types specified."
              }
            },
            {
              "name": "block-device",
              "docs": {
                "contents": "The descriptor refers to a block device inode."
              }
            },
            {
              "name": "character-device",
              "docs": {
                "contents": "The descriptor refers to a character device inode."
              }
            },
            {
              "name": "directory",
              "docs": {
                "contents": "The descriptor refers to a directory inode."
              }
            },
            {
              "name": "fifo",
              "docs": {
                "contents": "The descriptor refers to a named pipe."
              }
            },
            {
              "name": "symbolic-link",
              "docs": {
                "contents": "The file refers to a symbolic link inode."
              }
            },
            {
              "name": "regular-file",
              "docs": {
                "contents": "The descriptor refers to a regular file inode."
              }
            },
            {
              "name": "socket",
              "docs": {
                "contents": "The descriptor refers to a socket."
              }
            }
          ]
        }
      },
      "owner": {
        "interface": 5
      },
      "docs": {
        "contents": "The type of a filesystem object referenced by a descriptor.\n\nNote: This was called `filetype` in earlier versions of WASI."
      }
    },
    {
      "name": "descriptor-flags",
      "kind": {
        "flags": {
          "flags": [
            {
              "name": "read",
              "docs": {
                "contents": "Read mode: Data can be read."
              }
            },
            {
              "name": "write",
              "docs": {
                "contents": "Write mode: Data can be written to."
              }
            },
            {
              "name": "file-integrity-sync",
              "docs": {
                "contents": "Request that writes be performed according to synchronized I/O file\nintegrity completion. The data stored in the file and the file's\nmetadata are synchronized. This is similar to `O_SYNC` in POSIX.\n\nThe precise semantics of this operation have not yet been defined for\nWASI. At this time, it should be interpreted as a request, and not a\nrequirement."
              }
            },
            {
              "name": "data-integrity-sync",
              "docs": {
                "contents": "Request that writes be performed according to synchronized I/O data\nintegrity completion. Only the data stored in the file is\nsynchronized. This is similar to `O_DSYNC` in POSIX.\n\nThe precise semantics of this operation have not yet been defined for\nWASI. At this time, it should be interpreted as a request, and not a\nrequirement."
              }
            },
            {
              "name": "requested-write-sync",
              "docs": {
                "contents": "Requests that reads be performed at the same level of integrety\nrequested for writes. This is similar to `O_RSYNC` in POSIX.\n\nThe precise semantics of this operation have not yet been defined for\nWASI. At this time, it should be interpreted as a request, and not a\nrequirement."
              }
            },
            {
              "name": "mutate-directory",
              "docs": {
                "contents": "Mutating directories mode: Directory contents may be mutated.\n\nWhen this flag is unset on a descriptor, operations using the\ndescriptor which would create, rename, delete, modify the data or\nmetadata of filesystem objects, or obtain another handle which\nwould permit any of those, shall fail with `error-code::read-only` if\nthey would otherwise succeed.\n\nThis may only be set on directories."
              }
            }
          ]
        }
      },
      "owner": {
        "interface": 5
      },
      "docs": {
        "contents": "Descriptor flags.\n\nNote: This was called `fdflags` in earlier versions of WASI."
      }
    },
    {
      "name": "path-flags",
      "kind": {
        "flags": {
          "flags": [
            {
              "name": "symlink-follow",
              "docs": {
                "contents": "As long as the resolved path corresponds to a symbolic link, it is\nexpanded."
              }
            }
          ]
        }
      },
      "owner": {
        "interface": 5
      },
      "docs": {
        "contents": "Flags determining the method of how paths are resolved."
      }
    },
    {
      "name": "open-flags",
      "kind": {
        "flags": {
          "flags": [
            {
              "name": "create",
              "docs": {
                "contents": "Create file if it does not exist, similar to `O_CREAT` in POSIX."
              }
            },
            {
              "name": "directory",
              "docs": {
                "contents": "Fail if not a directory, similar to `O_DIRECTORY` in POSIX."
              }
            },
            {
              "name": "exclusive",
              "docs": {
                "contents": "Fail if file already exists, similar to `O_EXCL` in POSIX."
              }
            },
            {
              "name": "truncate",
              "docs": {
                "contents": "Truncate file to size 0, similar to `O_TRUNC` in POSIX."
              }
            }
          ]
        }
      },
      "owner": {
        "interface": 5
      },
      "docs": {
        "contents": "Open flags used by `open-at`."
      }
    },
    {
      "name": "link-count",
      "kind": {
        "type": "u64"
      },
      "owner": {
        "interface": 5
      },
      "docs": {
        "contents": "Number of hard links to an inode."
      }
    },
    {
      "name": null,
      "kind": {
        "option": 27
      },
      "owner": null
    },
    {
      "name": "descriptor-stat",
      "kind": {
        "record": {
          "fields": [
            {
              "name": "type",
              "type": 29,
              "docs": {
                "contents": "File type."
              }
            },
            {
              "name": "link-count",
              "type": 33,
              "docs": {
                "contents": "Number of hard links to the file."
              }
            },
            {
              "name": "size",
              "type": 28,
              "docs": {
                "contents": "For regular files, the file size in bytes. For symbolic links, the\nlength in bytes of the pathname contained in the symbolic link."
              }
            },
            {
              "name": "data-access-timestamp",
              "type": 34,
              "docs": {
                "contents": "Last data access timestamp.\n\nIf the `option` is none, the platform doesn't maintain an access\ntimestamp for this file."
              }
            },
            {
              "name": "data-modification-timestamp",
              "type": 34,
              "docs": {
                "contents": "Last data modification timestamp.\n\nIf the `option` is none, the platform doesn't maintain a\nmodification timestamp for this file."
              }
            },
            {
              "name": "status-change-timestamp",
              "type": 34,
              "docs": {
                "contents": "Last file status-change timestamp.\n\nIf the `option` is none, the platform doesn't maintain a\nstatus-change timestamp for this file."
              }
            }
          ]
        }
      },
      "owner": {
        "interface": 5
      },
      "docs": {
        "contents": "File attributes.\n\nNote: This was called `filestat` in earlier versions of WASI."
      }
    },
    {
      "name": "new-timestamp",
      "kind": {
        "variant": {
          "cases": [
            {
              "name": "no-change",
              "type": null,
              "docs": {
                "contents": "Leave the timestamp set to its previous value."
              }
            },
            {
              "name": "now",
              "type": null,
              "docs": {
                "contents": "Set the timestamp to the current time of the system clock associated\nwith the filesystem."
              }
            },
            {
              "name": "timestamp",
              "type": 27,
              "docs": {
                "contents": "Set the timestamp to the given value."
              }
            }
          ]
        }
      },
      "owner": {
        "interface": 5
      },
      "docs": {
        "contents": "When setting a timestamp, this gives the value to set it to."
      }
    },
    {
      "name": "directory-entry",
      "kind": {
        "record": {
          "fields": [
            {
              "name": "type",
              "type": 29,
              "docs": {
                "contents": "The type of the file referred to by this directory entry."
              }
            },
            {
              "name": "name",
              "type": "string",
              "docs": {
                "contents": "The name of the object."
              }
            }
          ]
        }
      },
      "owner": {
        "interface": 5
      },
      "docs": {
        "contents": "A directory entry."
      }
    },
    {
      "name": "error-code",
      "kind": {
        "enum": {
          "cases": [
            {
              "name": "access",
              "docs": {
                "contents": "Permission denied, similar to `EACCES` in POSIX."
              }
            },
            {
              "name": "would-block",
              "docs": {
                "contents": "Resource unavailable, or operation would block, similar to `EAGAIN` and `EWOULDBLOCK` in POSIX."
              }
            },
            {
              "name": "already",
              "docs": {
                "contents": "Connection already in progress, similar to `EALREADY` in POSIX."
              }
            },
            {
              "name": "bad-descriptor",
              "docs": {
                "contents": "Bad descriptor, similar to `EBADF` in POSIX."
              }
            },
            {
              "name": "busy",
              "docs": {
                "contents": "Device or resource busy, similar to `EBUSY` in POSIX."
              }
            },
            {
              "name": "deadlock",
              "docs": {
                "contents": "Resource deadlock would occur, similar to `EDEADLK` in POSIX."
              }
            },
            {
              "name": "quota",
              "docs": {
                "contents": "Storage quota exceeded, similar to `EDQUOT` in POSIX."
              }
            },
            {
              "name": "exist",
              "docs": {
                "contents": "File exists, similar to `EEXIST` in POSIX."
              }
            },
            {
              "name": "file-too-large",
              "docs": {
                "contents": "File too large, similar to `EFBIG` in POSIX."
              }
            },
            {
              "name": "illegal-byte-sequence",
              "docs": {
                "contents": "Illegal byte sequence, similar to `EILSEQ` in POSIX."
              }
            },
            {
              "name": "in-progress",
              "docs": {
                "contents": "Operation in progress, similar to `EINPROGRESS` in POSIX."
              }
            },
            {
              "name": "interrupted",
              "docs": {
                "contents": "Interrupted function, similar to `EINTR` in POSIX."
              }
            },
            {
              "name": "invalid",
              "docs": {
                "contents": "Invalid argument, similar to `EINVAL` in POSIX."
              }
            },
            {
              "name": "io",
              "docs": {
                "contents": "I/O error, similar to `EIO` in POSIX."
              }
            },
            {
              "name": "is-directory",
              "docs": {
                "contents": "Is a directory, similar to `EISDIR` in POSIX."
              }
            },
            {
              "name": "loop",
              "docs": {
                "contents": "Too many levels of symbolic links, similar to `ELOOP` in POSIX."
              }
            },
            {
              "name": "too-many-links",
              "docs": {
                "contents": "Too many links, similar to `EMLINK` in POSIX."
              }
            },
            {
              "name": "message-size",
              "docs": {
                "contents": "Message too large, similar to `EMSGSIZE` in POSIX."
              }
            },
            {
              "name": "name-too-long",
              "docs": {
                "contents": "Filename too long, similar to `ENAMETOOLONG` in POSIX."
              }
            },
            {
              "name": "no-device",
              "docs": {
                "contents": "No such device, similar to `ENODEV` in POSIX."
              }
            },
            {
              "name": "no-entry",
              "docs": {
                "contents": "No such file or directory, similar to `ENOENT` in POSIX."
              }
            },
            {
              "name": "no-lock",
              "docs": {
                "contents": "No locks available, similar to `ENOLCK` in POSIX."
              }
            },
            {
              "name": "insufficient-memory",
              "docs": {
                "contents": "Not enough space, similar to `ENOMEM` in POSIX."
              }
            },
            {
              "name": "insufficient-space",
              "docs": {
                "contents": "No space left on device, similar to `ENOSPC` in POSIX."
              }
            },
            {
              "name": "not-directory",
              "docs": {
                "contents": "Not a directory or a symbolic link to a directory, similar to `ENOTDIR` in POSIX."
              }
            },
            {
              "name": "not-empty",
              "docs": {
                "contents": "Directory not empty, similar to `ENOTEMPTY` in POSIX."
              }
            },
            {
              "name": "not-recoverable",
              "docs": {
                "contents": "State not recoverable, similar to `ENOTRECOVERABLE` in POSIX."
              }
            },
            {
              "name": "unsupported",
              "docs": {
                "contents": "Not supported, similar to `ENOTSUP` and `ENOSYS` in POSIX."
              }
            },
            {
              "name": "no-tty",
              "docs": {
                "contents": "Inappropriate I/O control operation, similar to `ENOTTY` in POSIX."
              }
            },
            {
              "name": "no-such-device",
              "docs": {
                "contents": "No such device or address, similar to `ENXIO` in POSIX."
              }
            },
            {
              "name": "overflow",
              "docs": {
                "contents": "Value too large to be stored in data type, similar to `EOVERFLOW` in POSIX."
              }
            },
            {
              "name": "not-permitted",
              "docs": {
                "contents": "Operation not permitted, similar to `EPERM` in POSIX."
              }
            },
            {
              "name": "pipe",
              "docs": {
                "contents": "Broken pipe, similar to `EPIPE` in POSIX."
              }
            },
            {
              "name": "read-only",
              "docs": {
                "contents": "Read-only file system, similar to `EROFS` in POSIX."
              }
            },
            {
              "name": "invalid-seek",
              "docs": {
                "contents": "Invalid seek, similar to `ESPIPE` in POSIX."
              }
            },
            {
              "name": "text-file-busy",
              "docs": {
                "contents": "Text file busy, similar to `ETXTBSY` in POSIX."
              }
            },
            {
              "name": "cross-device",
              "docs": {
                "contents": "Cross-device link, similar to `EXDEV` in POSIX."
              }
            }
          ]
        }
      },
      "owner": {
        "interface": 5
      },
      "docs": {
        "contents": "Error codes returned by functions, similar to `errno` in POSIX.\nNot all of these error codes are returned by the functions provided by this\nAPI; some are used in higher-level library layers, and others are provided\nmerely for alignment with POSIX."
      }
    },
    {
      "name": "advice",
      "kind": {
        "enum": {
          "cases": [
            {
              "name": "normal",
              "docs": {
                "contents": "The application has no advice to give on its behavior with respect\nto the specified data."
              }
            },
            {
              "name": "sequential",
              "docs": {
                "contents": "The application expects to access the specified data sequentially\nfrom lower offsets to higher offsets."
              }
            },
            {
              "name": "random",
              "docs": {
                "contents": "The application expects to access the specified data in a random\norder."
              }
            },
            {
              "name": "will-need",
              "docs": {
                "contents": "The application expects to access the specified data in the near\nfuture."
              }
            },
            {
              "name": "dont-need",
              "docs": {
                "contents": "The application expects that it will not access the specified data\nin the near future."
              }
            },
            {
              "name": "no-reuse",
              "docs": {
                "contents": "The application expects to access the specified data once and then\nnot reuse it thereafter."
              }
            }
          ]
        }
      },
      "owner": {
        "interface": 5
      },
      "docs": {
        "contents": "File or memory access pattern advisory information."
      }
    },
    {
      "name": "metadata-hash-value",
      "kind": {
        "record": {
          "fields": [
            {
              "name": "lower",
              "type": "u64",
              "docs": {
                "contents": "64 bits of a 128-bit hash value."
              }
            },
            {
              "name": "upper",
              "type": "u64",
              "docs": {
                "contents": "Another 64 bits of a 128-bit hash value."
              }
            }
          ]
        }
      },
      "owner": {
        "interface": 5
      },
      "docs": {
        "contents": "A 128-bit hash value, split into parts because wasm doesn't have a\n128-bit integer type."
      }
    },
    {
      "name": "descriptor",
      "kind": "resource",
      "owner": {
        "interface": 5
      },
      "docs": {
        "contents": "A descriptor is a reference to a filesystem object, which may be a file,\ndirectory, named pipe, special file, or other object on which filesystem\ncalls may be made."
      }
    },
    {
      "name": "directory-entry-stream",
      "kind": "resource",
      "owner": {
        "interface": 5
      },
      "docs": {
        "contents": "A stream of directory entries."
      }
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "borrow": 41
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "own": 24
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "result": {
          "ok": 44,
          "err": 38
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "own": 25
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "result": {
          "ok": 46,
          "err": 38
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "result": {
          "ok": null,
          "err": 38
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "result": {
          "ok": 30,
          "err": 38
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "result": {
          "ok": 29,
          "err": 38
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "list": "u8"
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "tuple": {
          "types": [
            51,
            "bool"
          ]
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "result": {
          "ok": 52,
          "err": 38
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "result": {
          "ok": 28,
          "err": 38
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "own": 42
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "result": {
          "ok": 55,
          "err": 38
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "result": {
          "ok": 35,
          "err": 38
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "own": 41
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "result": {
          "ok": 58,
          "err": 38
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "result": {
          "ok": "string",
          "err": 38
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "result": {
          "ok": 40,
          "err": 38
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "borrow": 42
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "option": 37
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "result": {
          "ok": 63,
          "err": 38
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "borrow": 26
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "option": 38
      },
      "owner": null
    },
    {
      "name": "descriptor",
      "kind": {
        "type": 41
      },
      "owner": {
        "interface": 6
      }
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "own": 67
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "tuple": {
          "types": [
            68,
            "string"
          ]
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "list": 69
      },
      "owner": null
    },
    {
      "name": "network",
      "kind": "resource",
      "owner": {
        "interface": 7
      },
      "docs": {
        "contents": "An opaque resource that represents access to (a subset of) the network.\nThis enables context-based security for networking.\nThere is no need for this to map 1:1 to a physical network interface."
      }
    },
    {
      "name": "error-code",
      "kind": {
        "enum": {
          "cases": [
            {
              "name": "unknown",
              "docs": {
                "contents": "Unknown error"
              }
            },
            {
              "name": "access-denied",
              "docs": {
                "contents": "Access denied.\n\nPOSIX equivalent: EACCES, EPERM"
              }
            },
            {
              "name": "not-supported",
              "docs": {
                "contents": "The operation is not supported.\n\nPOSIX equivalent: EOPNOTSUPP"
              }
            },
            {
              "name": "invalid-argument",
              "docs": {
                "contents": "One of the arguments is invalid.\n\nPOSIX equivalent: EINVAL"
              }
            },
            {
              "name": "out-of-memory",
              "docs": {
                "contents": "Not enough memory to complete the operation.\n\nPOSIX equivalent: ENOMEM, ENOBUFS, EAI_MEMORY"
              }
            },
            {
              "name": "timeout",
              "docs": {
                "contents": "The operation timed out before it could finish completely."
              }
            },
            {
              "name": "concurrency-conflict",
              "docs": {
                "contents": "This operation is incompatible with another asynchronous operation that is already in progress.\n\nPOSIX equivalent: EALREADY"
              }
            },
            {
              "name": "not-in-progress",
              "docs": {
                "contents": "Trying to finish an asynchronous operation that:\n- has not been started yet, or:\n- was already finished by a previous `finish-*` call.\n\nNote: this is scheduled to be removed when `future`s are natively supported."
              }
            },
            {
              "name": "would-block",
              "docs": {
                "contents": "The operation has been aborted because it could not be completed immediately.\n\nNote: this is scheduled to be removed when `future`s are natively supported."
              }
            },
            {
              "name": "invalid-state",
              "docs": {
                "contents": "The operation is not valid in the socket's current state."
              }
            },
            {
              "name": "new-socket-limit",
              "docs": {
                "contents": "A new socket resource could not be created because of a system limit."
              }
            },
            {
              "name": "address-not-bindable",
              "docs": {
                "contents": "A bind operation failed because the provided address is not an address that the `network` can bind to."
              }
            },
            {
              "name": "address-in-use",
              "docs": {
                "contents": "A bind operation failed because the provided address is already in use or because there are no ephemeral ports available."
              }
            },
            {
              "name": "remote-unreachable",
              "docs": {
                "contents": "The remote address is not reachable"
              }
            },
            {
              "name": "connection-refused",
              "docs": {
                "contents": "The connection was forcefully rejected"
              }
            },
            {
              "name": "connection-reset",
              "docs": {
                "contents": "The connection was reset."
              }
            },
            {
              "name": "connection-aborted",
              "docs": {
                "contents": "A connection was aborted."
              }
            },
            {
              "name": "datagram-too-large"
            },
            {
              "name": "name-unresolvable",
              "docs": {
                "contents": "Name does not exist or has no suitable associated IP addresses."
              }
            },
            {
              "name": "temporary-resolver-failure",
              "docs": {
                "contents": "A temporary failure in name resolution occurred."
              }
            },
            {
              "name": "permanent-resolver-failure",
              "docs": {
                "contents": "A permanent failure in name resolution occurred."
              }
            }
          ]
        }
      },
      "owner": {
        "interface": 7
      },
      "docs": {
        "contents": "Error codes.\n\nIn theory, every API can return any error code.\nIn practice, API's typically only return the errors documented per API\ncombined with a couple of errors that are always possible:\n- `unknown`\n- `access-denied`\n- `not-supported`\n- `out-of-memory`\n- `concurrency-conflict`\n\nSee each individual API for what the POSIX equivalents are. They sometimes differ per API."
      }
    },
    {
      "name": "ip-address-family",
      "kind": {
        "enum": {
          "cases": [
            {
              "name": "ipv4",
              "docs": {
                "contents": "Similar to `AF_INET` in POSIX."
              }
            },
            {
              "name": "ipv6",
              "docs": {
                "contents": "Similar to `AF_INET6` in POSIX."
              }
            }
          ]
        }
      },
      "owner": {
        "interface": 7
      }
    },
    {
      "name": "ipv4-address",
      "kind": {
        "tuple": {
          "types": [
            "u8",
            "u8",
            "u8",
            "u8"
          ]
        }
      },
      "owner": {
        "interface": 7
      }
    },
    {
      "name": "ipv6-address",
      "kind": {
        "tuple": {
          "types": [
            "u16",
            "u16",
            "u16",
            "u16",
            "u16",
            "u16",
            "u16",
            "u16"
          ]
        }
      },
      "owner": {
        "interface": 7
      }
    },
    {
      "name": "ip-address",
      "kind": {
        "variant": {
          "cases": [
            {
              "name": "ipv4",
              "type": 74
            },
            {
              "name": "ipv6",
              "type": 75
            }
          ]
        }
      },
      "owner": {
        "interface": 7
      }
    },
    {
      "name": "ipv4-socket-address",
      "kind": {
        "record": {
          "fields": [
            {
              "name": "port",
              "type": "u16"
            },
            {
              "name": "address",
              "type": 74
            }
          ]
        }
      },
      "owner": {
        "interface": 7
      }
    },
    {
      "name": "ipv6-socket-address",
      "kind": {
        "record": {
          "fields": [
            {
              "name": "port",
              "type": "u16"
            },
            {
              "name": "flow-info",
              "type": "u32"
            },
            {
              "name": "address",
              "type": 75
            },
            {
              "name": "scope-id",
              "type": "u32"
            }
          ]
        }
      },
      "owner": {
        "interface": 7
      }
    },
    {
      "name": "ip-socket-address",
      "kind": {
        "variant": {
          "cases": [
            {
              "name": "ipv4",
              "type": 77
            },
            {
              "name": "ipv6",
              "type": 78
            }
          ]
        }
      },
      "owner": {
        "interface": 7
      }
    },
    {
      "name": "network",
      "kind": {
        "type": 71
      },
      "owner": {
        "interface": 8
      }
    },
    {
      "name": "pollable",
      "kind": {
        "type": 2
      },
      "owner": {
        "interface": 9
      }
    },
    {
      "name": "network",
      "kind": {
        "type": 71
      },
      "owner": {
        "interface": 9
      }
    },
    {
      "name": "error-code",
      "kind": {
        "type": 72
      },
      "owner": {
        "interface": 9
      }
    },
    {
      "name": "ip-address",
      "kind": {
        "type": 76
      },
      "owner": {
        "interface": 9
      }
    },
    {
      "name": "resolve-address-stream",
      "kind": "resource",
      "owner": {
        "interface": 9
      }
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "borrow": 82
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "own": 85
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "result": {
          "ok": 87,
          "err": 83
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "borrow": 85
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "option": 84
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "result": {
          "ok": 90,
          "err": 83
        }
      },
      "owner": null
    },
    {
      "name": "input-stream",
      "kind": {
        "type": 10
      },
      "owner": {
        "interface": 10
      }
    },
    {
      "name": "output-stream",
      "kind": {
        "type": 11
      },
      "owner": {
        "interface": 10
      }
    },
    {
      "name": "pollable",
      "kind": {
        "type": 2
      },
      "owner": {
        "interface": 10
      }
    },
    {
      "name": "duration",
      "kind": {
        "type": 21
      },
      "owner": {
        "interface": 10
      }
    },
    {
      "name": "network",
      "kind": {
        "type": 71
      },
      "owner": {
        "interface": 10
      }
    },
    {
      "name": "error-code",
      "kind": {
        "type": 72
      },
      "owner": {
        "interface": 10
      }
    },
    {
      "name": "ip-socket-address",
      "kind": {
        "type": 79
      },
      "owner": {
        "interface": 10
      }
    },
    {
      "name": "ip-address-family",
      "kind": {
        "type": 73
      },
      "owner": {
        "interface": 10
      }
    },
    {
      "name": "shutdown-type",
      "kind": {
        "enum": {
          "cases": [
            {
              "name": "receive",
              "docs": {
                "contents": "Similar to `SHUT_RD` in POSIX."
              }
            },
            {
              "name": "send",
              "docs": {
                "contents": "Similar to `SHUT_WR` in POSIX."
              }
            },
            {
              "name": "both",
              "docs": {
                "contents": "Similar to `SHUT_RDWR` in POSIX."
              }
            }
          ]
        }
      },
      "owner": {
        "interface": 10
      }
    },
    {
      "name": "tcp-socket",
      "kind": "resource",
      "owner": {
        "interface": 10
      },
      "docs": {
        "contents": "A TCP socket handle."
      }
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "borrow": 101
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "borrow": 96
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "result": {
          "ok": null,
          "err": 97
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "own": 92
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "own": 93
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "tuple": {
          "types": [
            105,
            106
          ]
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "result": {
          "ok": 107,
          "err": 97
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "own": 101
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "tuple": {
          "types": [
            109,
            105,
            106
          ]
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "result": {
          "ok": 110,
          "err": 97
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "result": {
          "ok": 98,
          "err": 97
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "result": {
          "ok": "bool",
          "err": 97
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "result": {
          "ok": 95,
          "err": 97
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "result": {
          "ok": "u32",
          "err": 97
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "result": {
          "ok": "u8",
          "err": 97
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "result": {
          "ok": "u64",
          "err": 97
        }
      },
      "owner": null
    },
    {
      "name": "network",
      "kind": {
        "type": 71
      },
      "owner": {
        "interface": 11
      }
    },
    {
      "name": "error-code",
      "kind": {
        "type": 72
      },
      "owner": {
        "interface": 11
      }
    },
    {
      "name": "ip-address-family",
      "kind": {
        "type": 73
      },
      "owner": {
        "interface": 11
      }
    },
    {
      "name": "tcp-socket",
      "kind": {
        "type": 101
      },
      "owner": {
        "interface": 11
      }
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "own": 121
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "result": {
          "ok": 122,
          "err": 119
        }
      },
      "owner": null
    },
    {
      "name": "pollable",
      "kind": {
        "type": 2
      },
      "owner": {
        "interface": 12
      }
    },
    {
      "name": "network",
      "kind": {
        "type": 71
      },
      "owner": {
        "interface": 12
      }
    },
    {
      "name": "error-code",
      "kind": {
        "type": 72
      },
      "owner": {
        "interface": 12
      }
    },
    {
      "name": "ip-socket-address",
      "kind": {
        "type": 79
      },
      "owner": {
        "interface": 12
      }
    },
    {
      "name": "ip-address-family",
      "kind": {
        "type": 73
      },
      "owner": {
        "interface": 12
      }
    },
    {
      "name": null,
      "kind": {
        "list": "u8"
      },
      "owner": null
    },
    {
      "name": "incoming-datagram",
      "kind": {
        "record": {
          "fields": [
            {
              "name": "data",
              "type": 129,
              "docs": {
                "contents": "The payload.\n\nTheoretical max size: ~64 KiB. In practice, typically less than 1500 bytes."
              }
            },
            {
              "name": "remote-address",
              "type": 127,
              "docs": {
                "contents": "The source address.\n\nThis field is guaranteed to match the remote address the stream was initialized with, if any.\n\nEquivalent to the `src_addr` out parameter of `recvfrom`."
              }
            }
          ]
        }
      },
      "owner": {
        "interface": 12
      },
      "docs": {
        "contents": "A received datagram."
      }
    },
    {
      "name": null,
      "kind": {
        "option": 127
      },
      "owner": null
    },
    {
      "name": "outgoing-datagram",
      "kind": {
        "record": {
          "fields": [
            {
              "name": "data",
              "type": 129,
              "docs": {
                "contents": "The payload."
              }
            },
            {
              "name": "remote-address",
              "type": 131,
              "docs": {
                "contents": "The destination address.\n\nThe requirements on this field depend on how the stream was initialized:\n- with a remote address: this field must be None or match the stream's remote address exactly.\n- without a remote address: this field is required.\n\nIf this value is None, the send operation is equivalent to `send` in POSIX. Otherwise it is equivalent to `sendto`."
              }
            }
          ]
        }
      },
      "owner": {
        "interface": 12
      },
      "docs": {
        "contents": "A datagram to be sent out."
      }
    },
    {
      "name": "udp-socket",
      "kind": "resource",
      "owner": {
        "interface": 12
      },
      "docs": {
        "contents": "A UDP socket handle."
      }
    },
    {
      "name": "incoming-datagram-stream",
      "kind": "resource",
      "owner": {
        "interface": 12
      }
    },
    {
      "name": "outgoing-datagram-stream",
      "kind": "resource",
      "owner": {
        "interface": 12
      }
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "borrow": 133
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "borrow": 125
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "result": {
          "ok": null,
          "err": 126
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "own": 134
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "own": 135
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "tuple": {
          "types": [
            139,
            140
          ]
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "result": {
          "ok": 141,
          "err": 126
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "result": {
          "ok": 127,
          "err": 126
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "result": {
          "ok": "bool",
          "err": 126
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "result": {
          "ok": "u8",
          "err": 126
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "result": {
          "ok": "u64",
          "err": 126
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "borrow": 134
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "list": 130
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "result": {
          "ok": 148,
          "err": 126
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "borrow": 135
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "list": 132
      },
      "owner": null
    },
    {
      "name": "network",
      "kind": {
        "type": 71
      },
      "owner": {
        "interface": 13
      }
    },
    {
      "name": "error-code",
      "kind": {
        "type": 72
      },
      "owner": {
        "interface": 13
      }
    },
    {
      "name": "ip-address-family",
      "kind": {
        "type": 73
      },
      "owner": {
        "interface": 13
      }
    },
    {
      "name": "udp-socket",
      "kind": {
        "type": 133
      },
      "owner": {
        "interface": 13
      }
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "own": 155
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "result": {
          "ok": 156,
          "err": 153
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "own": 80
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "own": 81
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "own": 94
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "own": 124
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "tuple": {
          "types": [
            "u64",
            "u64"
          ]
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "list": "u8"
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "tuple": {
          "types": [
            "string",
            "string"
          ]
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "list": 164
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "list": "string"
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "option": "string"
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "result": {
          "ok": null,
          "err": null
        }
      },
      "owner": null
    },
    {
      "name": "input-stream",
      "kind": {
        "type": 10
      },
      "owner": {
        "interface": 20
      }
    },
    {
      "name": "output-stream",
      "kind": {
        "type": 11
      },
      "owner": {
        "interface": 21
      }
    },
    {
      "name": "output-stream",
      "kind": {
        "type": 11
      },
      "owner": {
        "interface": 22
      }
    },
    {
      "name": "terminal-input",
      "kind": "resource",
      "owner": {
        "interface": 23
      },
      "docs": {
        "contents": "The input side of a terminal."
      }
    },
    {
      "name": "terminal-output",
      "kind": "resource",
      "owner": {
        "interface": 24
      },
      "docs": {
        "contents": "The output side of a terminal."
      }
    },
    {
      "name": "terminal-input",
      "kind": {
        "type": 172
      },
      "owner": {
        "interface": 25
      }
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "own": 174
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "option": 175
      },
      "owner": null
    },
    {
      "name": "terminal-output",
      "kind": {
        "type": 173
      },
      "owner": {
        "interface": 26
      }
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "own": 177
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "option": 178
      },
      "owner": null
    },
    {
      "name": "terminal-output",
      "kind": {
        "type": 173
      },
      "owner": {
        "interface": 27
      }
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "own": 180
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "option": 181
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "own": 169
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "own": 170
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "own": 171
        }
      },
      "owner": null
    },
    {
      "name": "duration",
      "kind": {
        "type": 21
      },
      "owner": {
        "interface": 28
      }
    },
    {
      "name": "input-stream",
      "kind": {
        "type": 10
      },
      "owner": {
        "interface": 28
      }
    },
    {
      "name": "output-stream",
      "kind": {
        "type": 11
      },
      "owner": {
        "interface": 28
      }
    },
    {
      "name": "stream-error",
      "kind": {
        "type": 6
      },
      "owner": {
        "interface": 28
      }
    },
    {
      "name": "pollable",
      "kind": {
        "type": 2
      },
      "owner": {
        "interface": 28
      }
    },
    {
      "name": "method",
      "kind": {
        "variant": {
          "cases": [
            {
              "name": "get",
              "type": null
            },
            {
              "name": "head",
              "type": null
            },
            {
              "name": "post",
              "type": null
            },
            {
              "name": "put",
              "type": null
            },
            {
              "name": "delete",
              "type": null
            },
            {
              "name": "connect",
              "type": null
            },
            {
              "name": "options",
              "type": null
            },
            {
              "name": "trace",
              "type": null
            },
            {
              "name": "patch",
              "type": null
            },
            {
              "name": "other",
              "type": "string"
            }
          ]
        }
      },
      "owner": {
        "interface": 28
      },
      "docs": {
        "contents": "This type corresponds to HTTP standard Methods."
      }
    },
    {
      "name": "scheme",
      "kind": {
        "variant": {
          "cases": [
            {
              "name": "HTTP",
              "type": null
            },
            {
              "name": "HTTPS",
              "type": null
            },
            {
              "name": "other",
              "type": "string"
            }
          ]
        }
      },
      "owner": {
        "interface": 28
      },
      "docs": {
        "contents": "This type corresponds to HTTP standard Related Schemes."
      }
    },
    {
      "name": null,
      "kind": {
        "option": "string"
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "option": "u16"
      },
      "owner": null
    },
    {
      "name": "DNS-error-payload",
      "kind": {
        "record": {
          "fields": [
            {
              "name": "rcode",
              "type": 193
            },
            {
              "name": "info-code",
              "type": 194
            }
          ]
        }
      },
      "owner": {
        "interface": 28
      },
      "docs": {
        "contents": "Defines the case payload type for `DNS-error` above:"
      }
    },
    {
      "name": null,
      "kind": {
        "option": "u8"
      },
      "owner": null
    },
    {
      "name": "TLS-alert-received-payload",
      "kind": {
        "record": {
          "fields": [
            {
              "name": "alert-id",
              "type": 196
            },
            {
              "name": "alert-message",
              "type": 193
            }
          ]
        }
      },
      "owner": {
        "interface": 28
      },
      "docs": {
        "contents": "Defines the case payload type for `TLS-alert-received` above:"
      }
    },
    {
      "name": null,
      "kind": {
        "option": "u32"
      },
      "owner": null
    },
    {
      "name": "field-size-payload",
      "kind": {
        "record": {
          "fields": [
            {
              "name": "field-name",
              "type": 193
            },
            {
              "name": "field-size",
              "type": 198
            }
          ]
        }
      },
      "owner": {
        "interface": 28
      },
      "docs": {
        "contents": "Defines the case payload type for `HTTP-response-{header,trailer}-size` above:"
      }
    },
    {
      "name": null,
      "kind": {
        "option": "u64"
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "option": 199
      },
      "owner": null
    },
    {
      "name": "error-code",
      "kind": {
        "variant": {
          "cases": [
            {
              "name": "DNS-timeout",
              "type": null
            },
            {
              "name": "DNS-error",
              "type": 195
            },
            {
              "name": "destination-not-found",
              "type": null
            },
            {
              "name": "destination-unavailable",
              "type": null
            },
            {
              "name": "destination-IP-prohibited",
              "type": null
            },
            {
              "name": "destination-IP-unroutable",
              "type": null
            },
            {
              "name": "connection-refused",
              "type": null
            },
            {
              "name": "connection-terminated",
              "type": null
            },
            {
              "name": "connection-timeout",
              "type": null
            },
            {
              "name": "connection-read-timeout",
              "type": null
            },
            {
              "name": "connection-write-timeout",
              "type": null
            },
            {
              "name": "connection-limit-reached",
              "type": null
            },
            {
              "name": "TLS-protocol-error",
              "type": null
            },
            {
              "name": "TLS-certificate-error",
              "type": null
            },
            {
              "name": "TLS-alert-received",
              "type": 197
            },
            {
              "name": "HTTP-request-denied",
              "type": null
            },
            {
              "name": "HTTP-request-length-required",
              "type": null
            },
            {
              "name": "HTTP-request-body-size",
              "type": 200
            },
            {
              "name": "HTTP-request-method-invalid",
              "type": null
            },
            {
              "name": "HTTP-request-URI-invalid",
              "type": null
            },
            {
              "name": "HTTP-request-URI-too-long",
              "type": null
            },
            {
              "name": "HTTP-request-header-section-size",
              "type": 198
            },
            {
              "name": "HTTP-request-header-size",
              "type": 201
            },
            {
              "name": "HTTP-request-trailer-section-size",
              "type": 198
            },
            {
              "name": "HTTP-request-trailer-size",
              "type": 199
            },
            {
              "name": "HTTP-response-incomplete",
              "type": null
            },
            {
              "name": "HTTP-response-header-section-size",
              "type": 198
            },
            {
              "name": "HTTP-response-header-size",
              "type": 199
            },
            {
              "name": "HTTP-response-body-size",
              "type": 200
            },
            {
              "name": "HTTP-response-trailer-section-size",
              "type": 198
            },
            {
              "name": "HTTP-response-trailer-size",
              "type": 199
            },
            {
              "name": "HTTP-response-transfer-coding",
              "type": 193
            },
            {
              "name": "HTTP-response-content-coding",
              "type": 193
            },
            {
              "name": "HTTP-response-timeout",
              "type": null
            },
            {
              "name": "HTTP-upgrade-failed",
              "type": null
            },
            {
              "name": "HTTP-protocol-error",
              "type": null
            },
            {
              "name": "loop-detected",
              "type": null
            },
            {
              "name": "configuration-error",
              "type": null
            },
            {
              "name": "internal-error",
              "type": 193,
              "docs": {
                "contents": "This is a catch-all error for anything that doesn't fit cleanly into a\nmore specific case. It also includes an optional string for an\nunstructured description of the error. Users should not depend on the\nstring for diagnosing errors, as it's not required to be consistent\nbetween implementations."
              }
            }
          ]
        }
      },
      "owner": {
        "interface": 28
      },
      "docs": {
        "contents": "These cases are inspired by the IANA HTTP Proxy Error Types:\nhttps://www.iana.org/assignments/http-proxy-status/http-proxy-status.xhtml#table-http-proxy-error-types"
      }
    },
    {
      "name": "header-error",
      "kind": {
        "variant": {
          "cases": [
            {
              "name": "invalid-syntax",
              "type": null,
              "docs": {
                "contents": "This error indicates that a `field-key` or `field-value` was\nsyntactically invalid when used with an operation that sets headers in a\n`fields`."
              }
            },
            {
              "name": "forbidden",
              "type": null,
              "docs": {
                "contents": "This error indicates that a forbidden `field-key` was used when trying\nto set a header in a `fields`."
              }
            },
            {
              "name": "immutable",
              "type": null,
              "docs": {
                "contents": "This error indicates that the operation on the `fields` was not\npermitted because the fields are immutable."
              }
            }
          ]
        }
      },
      "owner": {
        "interface": 28
      },
      "docs": {
        "contents": "This type enumerates the different kinds of errors that may occur when\nsetting or appending to a `fields` resource."
      }
    },
    {
      "name": "field-key",
      "kind": {
        "type": "string"
      },
      "owner": {
        "interface": 28
      },
      "docs": {
        "contents": "Field keys are always strings."
      }
    },
    {
      "name": "field-value",
      "kind": {
        "list": "u8"
      },
      "owner": {
        "interface": 28
      },
      "docs": {
        "contents": "Field values should always be ASCII strings. However, in\nreality, HTTP implementations often have to interpret malformed values,\nso they are provided as a list of bytes."
      }
    },
    {
      "name": "fields",
      "kind": "resource",
      "owner": {
        "interface": 28
      },
      "docs": {
        "contents": "This following block defines the `fields` resource which corresponds to\nHTTP standard Fields. Fields are a common representation used for both\nHeaders and Trailers."
      }
    },
    {
      "name": "headers",
      "kind": {
        "type": 206
      },
      "owner": {
        "interface": 28
      },
      "docs": {
        "contents": "Headers is an alias for Fields."
      }
    },
    {
      "name": "trailers",
      "kind": {
        "type": 206
      },
      "owner": {
        "interface": 28
      },
      "docs": {
        "contents": "Trailers is an alias for Fields."
      }
    },
    {
      "name": "incoming-request",
      "kind": "resource",
      "owner": {
        "interface": 28
      },
      "docs": {
        "contents": "Represents an incoming HTTP Request."
      }
    },
    {
      "name": "outgoing-request",
      "kind": "resource",
      "owner": {
        "interface": 28
      },
      "docs": {
        "contents": "Represents an outgoing HTTP Request."
      }
    },
    {
      "name": "request-options",
      "kind": "resource",
      "owner": {
        "interface": 28
      },
      "docs": {
        "contents": "Parameters for making an HTTP Request. Each of these parameters is an\noptional timeout, with the unit in milliseconds, applicable to the\ntransport layer of the HTTP protocol.\n\nThese timeouts are separate from any the user may use to bound a\nblocking call to `wasi:io/poll.poll`."
      }
    },
    {
      "name": "response-outparam",
      "kind": "resource",
      "owner": {
        "interface": 28
      },
      "docs": {
        "contents": "Represents the ability to send an HTTP Response.\n\nThis resource is used by the `wasi:http/incoming-handler` interface to\nallow a Response to be sent corresponding to the Request provided as the\nother argument to `incoming-handler.handle`."
      }
    },
    {
      "name": "status-code",
      "kind": {
        "type": "u16"
      },
      "owner": {
        "interface": 28
      },
      "docs": {
        "contents": "This type corresponds to the HTTP standard Status Code."
      }
    },
    {
      "name": "incoming-response",
      "kind": "resource",
      "owner": {
        "interface": 28
      },
      "docs": {
        "contents": "Represents an incoming HTTP Response."
      }
    },
    {
      "name": "incoming-body",
      "kind": "resource",
      "owner": {
        "interface": 28
      },
      "docs": {
        "contents": "Represents an incoming HTTP Request or Response's Body.\n\nA body has both its contents - a stream of bytes - and a (possibly\nempty) set of trailers, indicating that the full contents of the\nbody have been received. This resource represents the contents as\nan `input-stream` and the delivery of trailers as a `future-trailers`,\nand ensures that the user of this interface may only be consuming either\nthe body contents or waiting on trailers at any given time."
      }
    },
    {
      "name": "future-trailers",
      "kind": "resource",
      "owner": {
        "interface": 28
      },
      "docs": {
        "contents": "Represents a future which may eventaully return trailers, or an error.\n\nIn the case that the incoming HTTP Request or Response did not have any\ntrailers, this future will resolve to the empty set of trailers once the\ncomplete Request or Response body has been received."
      }
    },
    {
      "name": "outgoing-response",
      "kind": "resource",
      "owner": {
        "interface": 28
      },
      "docs": {
        "contents": "Represents an outgoing HTTP Response."
      }
    },
    {
      "name": "outgoing-body",
      "kind": "resource",
      "owner": {
        "interface": 28
      },
      "docs": {
        "contents": "Represents an outgoing HTTP Request or Response's Body.\n\nA body has both its contents - a stream of bytes - and a (possibly\nempty) set of trailers, inducating the full contents of the body\nhave been sent. This resource represents the contents as an\n`output-stream` child resource, and the completion of the body (with\noptional trailers) with a static function that consumes the\n`outgoing-body` resource, and ensures that the user of this interface\nmay not write to the body contents after the body has been finished.\n\nIf the user code drops this resource, as opposed to calling the static\nmethod `finish`, the implementation should treat the body as incomplete,\nand that an error has occured. The implementation should propogate this\nerror to the HTTP protocol by whatever means it has available,\nincluding: corrupting the body on the wire, aborting the associated\nRequest, or sending a late status code for the Response."
      }
    },
    {
      "name": "future-incoming-response",
      "kind": "resource",
      "owner": {
        "interface": 28
      },
      "docs": {
        "contents": "Represents a future which may eventaully return an incoming HTTP\nResponse, or an error.\n\nThis resource is returned by the `wasi:http/outgoing-handler` interface to\nprovide the HTTP Response corresponding to the sent Request."
      }
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "borrow": 189
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "option": 202
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "tuple": {
          "types": [
            204,
            205
          ]
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "list": 222
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "own": 206
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "result": {
          "ok": 224,
          "err": 203
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "borrow": 206
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "list": 205
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "result": {
          "ok": null,
          "err": 203
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "borrow": 209
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "option": 192
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "own": 215
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "result": {
          "ok": 231,
          "err": null
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "borrow": 210
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "own": 218
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "result": {
          "ok": 234,
          "err": null
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "result": {
          "ok": null,
          "err": null
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "borrow": 211
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "option": 186
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "own": 217
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "result": {
          "ok": 239,
          "err": 202
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "borrow": 214
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "borrow": 215
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "own": 187
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "result": {
          "ok": 243,
          "err": null
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "borrow": 216
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "own": 208
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "option": 246
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "result": {
          "ok": 247,
          "err": 202
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "option": 248
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "borrow": 217
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "borrow": 218
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "own": 188
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "result": {
          "ok": 252,
          "err": null
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "borrow": 219
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "own": 214
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "result": {
          "ok": 255,
          "err": 202
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "result": {
          "ok": 256,
          "err": null
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "option": 257
      },
      "owner": null
    },
    {
      "name": "incoming-request",
      "kind": {
        "type": 209
      },
      "owner": {
        "interface": 29
      }
    },
    {
      "name": "response-outparam",
      "kind": {
        "type": 212
      },
      "owner": {
        "interface": 29
      }
    },
    {
      "name": "outgoing-request",
      "kind": {
        "type": 210
      },
      "owner": {
        "interface": 30
      }
    },
    {
      "name": "request-options",
      "kind": {
        "type": 211
      },
      "owner": {
        "interface": 30
      }
    },
    {
      "name": "future-incoming-response",
      "kind": {
        "type": 219
      },
      "owner": {
        "interface": 30
      }
    },
    {
      "name": "error-code",
      "kind": {
        "type": 202
      },
      "owner": {
        "interface": 30
      }
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "own": 262
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "option": 265
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "own": 263
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "result": {
          "ok": 267,
          "err": 264
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "own": 207
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "own": 210
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "own": 211
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "own": 212
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "own": 216
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "own": 190
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "own": 259
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "own": 260
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "own": 261
        }
      },
      "owner": null
    },
    {
      "name": "output-stream",
      "kind": {
        "type": 11
      },
      "owner": {
        "world": 9
      }
    },
    {
      "name": "descriptor-stat",
      "kind": {
        "type": 35
      },
      "owner": {
        "world": 9
      }
    },
    {
      "name": null,
      "kind": {
        "list": "string"
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "result": {
          "ok": null,
          "err": null
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "handle": {
          "own": 278
        }
      },
      "owner": null
    }
  ],
  "packages": [
    {
      "name": "wasi:io@0.2.0-rc-2023-11-05",
      "interfaces": {
        "error": 0,
        "poll": 1,
        "streams": 2
      },
      "worlds": {
        "imports": 0
      }
    },
    {
      "name": "wasi:clocks@0.2.0-rc-2023-11-05",
      "interfaces": {
        "monotonic-clock": 3,
        "wall-clock": 4
      },
      "worlds": {
        "imports": 1
      }
    },
    {
      "name": "wasi:filesystem@0.2.0-rc-2023-11-05",
      "interfaces": {
        "types": 5,
        "preopens": 6
      },
      "worlds": {
        "imports": 2
      }
    },
    {
      "name": "wasi:sockets@0.2.0-rc-2023-11-05",
      "interfaces": {
        "network": 7,
        "instance-network": 8,
        "ip-name-lookup": 9,
        "tcp": 10,
        "tcp-create-socket": 11,
        "udp": 12,
        "udp-create-socket": 13
      },
      "worlds": {
        "imports": 3
      }
    },
    {
      "name": "wasi:random@0.2.0-rc-2023-11-05",
      "interfaces": {
        "insecure-seed": 14,
        "insecure": 15,
        "random": 16
      },
      "worlds": {
        "imports": 4
      }
    },
    {
      "name": "wasi:cli@0.2.0-rc-2023-11-05",
      "interfaces": {
        "environment": 17,
        "exit": 18,
        "run": 19,
        "stdin": 20,
        "stdout": 21,
        "stderr": 22,
        "terminal-input": 23,
        "terminal-output": 24,
        "terminal-stdin": 25,
        "terminal-stdout": 26,
        "terminal-stderr": 27
      },
      "worlds": {
        "reactor": 5,
        "command": 6
      }
    },
    {
      "name": "wasi:http@0.2.0-rc-2023-11-05",
      "interfaces": {
        "types": 28,
        "incoming-handler": 29,
        "outgoing-handler": 30
      },
      "worlds": {
        "proxy": 7
      }
    },
    {
      "name": "wasmtime:wasi",
      "interfaces": {},
      "worlds": {
        "command-extended": 8,
        "test-reactor": 9,
        "test-command": 10
      }
    }
  ]
}